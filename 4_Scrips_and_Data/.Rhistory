# Script to Plot the Data From the "CombineMeteorologicalData.csv" created by the script "Combine_All_Data_To_CSV_File.R"
# Author Juan Bettinelli
# Last change: 26.1.23
library(pacman)
library(lubridate)
library(readr)
library(plyr)
library(tidyverse)
library(ggplot2)
library(hexbin)
library(gridExtra)
library(reshape2)
library(openair)
library(cowplot)
library(patchwork)
library(dplyr)
library(GGally)
library(ggthemes)
library(ggvis)
library(httr)
library(plotly)
library(rio)
library(rmarkdown)
library(shiny)
library(stringr)
library(tidyr)
library(pracma)
library(zoo)
library(dplyr)
#Set Working Directory, Set it into the folder "MasterThesis/4_Scrips_and_Data" to automatically access the data.
setwd("/Users/juanbettinelli/Documents/Uni/MasterThesis/4_Scrips_and_Data")
StartTime <- as.POSIXct('2021-08-01 22:03:00',
format = "%Y-%m-%d %H:%M:%S",
tz ="utc")
# Start Time: 2021-08-01 22:03:00
FinishTime <- as.POSIXct('2022-03-29 00:00:00',
format = "%Y-%m-%d %H:%M:%S",
tz ="utc")
# Total Timeseries: 2022-03-29 00:00:00
# Hamburg Campagne Timeseries: 2021-09-06 00:00:00
# Hamburg Campaine #2: 2021-09-17 10:21:00
########### Read the CSV File #############
TotalData <- import("4_Data/OutputData/CombineMeteorologicalData.csv")
TotalData$UTC <- as.POSIXct(as.character(TotalData$UTC),
format = "%Y-%m-%d %H:%M:%S",
tz = "UTC")
TotalData$X.CH4. <- as.numeric(TotalData$X.CH4.)
TotalData <- filter(TotalData, TotalData$UTC > StartTime & TotalData$UTC < FinishTime, .preserve = FALSE)
TotalData$UTC <- as.POSIXct(TotalData$UTC,
format = "%d-%m-%Y %H:%M:%S",
tz = "utc")
TotalData$Direction[TotalData$Direction > 361] <- NA
TotalData$Speed[TotalData$Speed > 99] <- NA
#------------------------------------------------------------------------------------------------------------
########### Find a rolling average in the methane measurements #############
# Specify the window size for the moving average
window_size <- 3*6
# create new Data frame for rolling average
CH4_Smooth <- TotalData[complete.cases(TotalData[ , "X.CH4."]),c("UTC", "X.CH4.")]
# Apply the moving average filter to the 'X.CH4.' column
CH4_Smooth$X.CH4.Smoothed <- stats::filter(CH4_Smooth$X.CH4., rep(1/window_size, window_size))
# Merge the raling average to TotalData Dataframe
TotalData <- merge( TotalData, CH4_Smooth[ , c("UTC", "X.CH4.Smoothed")],
by.x = "UTC",
by.y = "UTC",
all.x = TRUE,
all.y = TRUE,
sort = TRUE)
TotalData <- TotalData[!is.na(CH4_Smooth$UTC),]
# Ensure data is Numeric
TotalData$X.CH4.Smoothed <- as.numeric(TotalData$X.CH4.Smoothed)
TotalData$X.CH4.Diff <- as.numeric(TotalData$X.CH4.Smoothed - TotalData$X.CH4 )
View(TotalData)
TotalData$X.CH4.Diff <- TotalData$X.CH4.Smoothed - TotalData$X.CH4
TotalData$X.CH4.Diff <- 0
test <-  TotalData$X.CH4.Smoothed - TotalData$X.CH4
test
print(test)
test <-  TotalData$X.CH4.Smoothed - TotalData$X.CH4.
TotalData$X.CH4.Diff <- TotalData$X.CH4.Smoothed - TotalData$X.CH4.
TotalData$X.CH4.Diff <- TotalData$X.CH4. - TotalData$X.CH4.Smoothed
plot(TotalData$X.CH4.Smoothed)
plot(TotalData$X.CH4.Diff)
StartTime <- as.POSIXct('2021-08-01 22:03:00',
format = "%Y-%m-%d %H:%M:%S",
tz ="utc")
# Start Time: 2021-08-01 22:03:00
FinishTime <- as.POSIXct('2021-08-03 00:00:00',
format = "%Y-%m-%d %H:%M:%S",
tz ="utc")
# Total Timeseries: 2022-03-29 00:00:00
# Hamburg Campagne Timeseries: 2021-09-06 00:00:00
# Hamburg Campaine #2: 2021-09-17 10:21:00
########### Read the CSV File #############
TotalData <- import("4_Data/OutputData/CombineMeteorologicalData.csv")
TotalData$UTC <- as.POSIXct(as.character(TotalData$UTC),
format = "%Y-%m-%d %H:%M:%S",
tz = "UTC")
TotalData$X.CH4. <- as.numeric(TotalData$X.CH4.)
TotalData <- filter(TotalData, TotalData$UTC > StartTime & TotalData$UTC < FinishTime, .preserve = FALSE)
TotalData$UTC <- as.POSIXct(TotalData$UTC,
format = "%d-%m-%Y %H:%M:%S",
tz = "utc")
TotalData$Direction[TotalData$Direction > 361] <- NA
TotalData$Speed[TotalData$Speed > 99] <- NA
#------------------------------------------------------------------------------------------------------------
########### Find a rolling average in the methane measurements #############
# Specify the window size for the moving average
window_size <- 3*6
# create new Data frame for rolling average
CH4_Smooth <- TotalData[complete.cases(TotalData[ , "X.CH4."]),c("UTC", "X.CH4.")]
# Apply the moving average filter to the 'X.CH4.' column
CH4_Smooth$X.CH4.Smoothed <- stats::filter(CH4_Smooth$X.CH4., rep(1/window_size, window_size))
# Merge the raling average to TotalData Dataframe
TotalData <- merge( TotalData, CH4_Smooth[ , c("UTC", "X.CH4.Smoothed")],
by.x = "UTC",
by.y = "UTC",
all.x = TRUE,
all.y = TRUE,
sort = TRUE)
TotalData <- TotalData[!is.na(CH4_Smooth$UTC),]
# Ensure data is Numeric
TotalData$X.CH4.Smoothed <- as.numeric(TotalData$X.CH4.Smoothed)
TotalData$X.CH4.Diff <- TotalData$X.CH4. - TotalData$X.CH4.Smoothed
plot(TotalData$X.CH4.Diff)
ggplot(TotalData, aes(UTC, X.CH4.Diff)) +
geom_line()+
labs(x = "UTC",
y = expression("CH"[4]*" concentration [ppb]"),
title = "Methane concentration vs. Time")+
scale_color_gradient(low="red", high="blue")
ggplot(TotalData, aes(UTC, X.CH4.Diff)) +
geom_line()+
labs(x = "UTC",
y = expression("CH"[4]*" concentration [ppb]"),
title = "Methane concentration vs. Time")
ggplot(TotalData) +
geom_line(aes(UTC, X.CH4.Diff))+
labs(x = "UTC",
y = expression("CH"[4]*" concentration [ppb]"),
title = "Methane concentration vs. Time")
ggplot(TotalData) +
geom_point(aes(UTC, X.CH4.Diff))+
labs(x = "UTC",
y = expression("CH"[4]*" concentration [ppb]"),
title = "Methane concentration vs. Time")
ggplot(TotalData) +
geom_point(aes(UTC, X.CH4.Diff))+
geom_point(aes(UTC, X.CH4.))+
geom_point(aes(UTC, X.CH4.Smoothed))+
labs(x = "UTC",
y = expression("CH"[4]*" concentration [ppb]"),
title = "Methane concentration vs. Time")
ggplot(TotalData) +
geom_point(aes(UTC, X.CH4.Diff))+
geom_point(aes(UTC, X.CH4., color = "red"))+
geom_point(aes(UTC, X.CH4.Smoothed, color = "blue"))+
labs(x = "UTC",
y = expression("CH"[4]*" concentration [ppb]"),
title = "Methane concentration vs. Time")
StartTime <- as.POSIXct('2021-09-07 00:00:00',
format = "%Y-%m-%d %H:%M:%S",
tz ="utc")
# Start Time: 2021-08-01 22:03:00
FinishTime <- as.POSIXct('2021-09-09 00:00:00',
format = "%Y-%m-%d %H:%M:%S",
tz ="utc")
# Total Timeseries: 2022-03-29 00:00:00
# Hamburg Campagne Timeseries: 2021-09-06 00:00:00
# Hamburg Campaine #2: 2021-09-17 10:21:00
########### Read the CSV File #############
TotalData <- import("4_Data/OutputData/CombineMeteorologicalData.csv")
TotalData$UTC <- as.POSIXct(as.character(TotalData$UTC),
format = "%Y-%m-%d %H:%M:%S",
tz = "UTC")
TotalData$X.CH4. <- as.numeric(TotalData$X.CH4.)
TotalData <- filter(TotalData, TotalData$UTC > StartTime & TotalData$UTC < FinishTime, .preserve = FALSE)
TotalData$UTC <- as.POSIXct(TotalData$UTC,
format = "%d-%m-%Y %H:%M:%S",
tz = "utc")
TotalData$Direction[TotalData$Direction > 361] <- NA
TotalData$Speed[TotalData$Speed > 99] <- NA
#------------------------------------------------------------------------------------------------------------
########### Find a rolling average in the methane measurements #############
# Specify the window size for the moving average
window_size <- 3*6
# create new Data frame for rolling average
CH4_Smooth <- TotalData[complete.cases(TotalData[ , "X.CH4."]),c("UTC", "X.CH4.")]
# Apply the moving average filter to the 'X.CH4.' column
CH4_Smooth$X.CH4.Smoothed <- stats::filter(CH4_Smooth$X.CH4., rep(1/window_size, window_size))
# Merge the raling average to TotalData Dataframe
TotalData <- merge( TotalData, CH4_Smooth[ , c("UTC", "X.CH4.Smoothed")],
by.x = "UTC",
by.y = "UTC",
all.x = TRUE,
all.y = TRUE,
sort = TRUE)
TotalData <- TotalData[!is.na(CH4_Smooth$UTC),]
# Ensure data is Numeric
TotalData$X.CH4.Smoothed <- as.numeric(TotalData$X.CH4.Smoothed)
TotalData$X.CH4.Diff <- TotalData$X.CH4. - TotalData$X.CH4.Smoothed
ggplot(TotalData) +
geom_point(aes(UTC, X.CH4.Diff))+
geom_point(aes(UTC, X.CH4., color = "red"))+
geom_point(aes(UTC, X.CH4.Smoothed, color = "blue"))+
labs(x = "UTC",
y = expression("CH"[4]*" concentration [ppb]"),
title = "Methane concentration vs. Time")
StartTime <- as.POSIXct('2021-09-07 00:00:00',
format = "%Y-%m-%d %H:%M:%S",
tz ="utc")
# Start Time: 2021-08-01 22:03:00
FinishTime <- as.POSIXct('2021-09-13 00:00:00',
format = "%Y-%m-%d %H:%M:%S",
tz ="utc")
# Total Timeseries: 2022-03-29 00:00:00
# Hamburg Campagne Timeseries: 2021-09-06 00:00:00
# Hamburg Campaine #2: 2021-09-17 10:21:00
########### Read the CSV File #############
TotalData <- import("4_Data/OutputData/CombineMeteorologicalData.csv")
TotalData$UTC <- as.POSIXct(as.character(TotalData$UTC),
format = "%Y-%m-%d %H:%M:%S",
tz = "UTC")
TotalData$X.CH4. <- as.numeric(TotalData$X.CH4.)
TotalData <- filter(TotalData, TotalData$UTC > StartTime & TotalData$UTC < FinishTime, .preserve = FALSE)
TotalData$UTC <- as.POSIXct(TotalData$UTC,
format = "%d-%m-%Y %H:%M:%S",
tz = "utc")
TotalData$Direction[TotalData$Direction > 361] <- NA
TotalData$Speed[TotalData$Speed > 99] <- NA
#------------------------------------------------------------------------------------------------------------
########### Find a rolling average in the methane measurements #############
# Specify the window size for the moving average
window_size <- 3*6
# create new Data frame for rolling average
CH4_Smooth <- TotalData[complete.cases(TotalData[ , "X.CH4."]),c("UTC", "X.CH4.")]
# Apply the moving average filter to the 'X.CH4.' column
CH4_Smooth$X.CH4.Smoothed <- stats::filter(CH4_Smooth$X.CH4., rep(1/window_size, window_size))
# Merge the raling average to TotalData Dataframe
TotalData <- merge( TotalData, CH4_Smooth[ , c("UTC", "X.CH4.Smoothed")],
by.x = "UTC",
by.y = "UTC",
all.x = TRUE,
all.y = TRUE,
sort = TRUE)
TotalData <- TotalData[!is.na(CH4_Smooth$UTC),]
# Ensure data is Numeric
TotalData$X.CH4.Smoothed <- as.numeric(TotalData$X.CH4.Smoothed)
TotalData$X.CH4.Diff <- TotalData$X.CH4. - TotalData$X.CH4.Smoothed
ggplot(TotalData) +
geom_point(aes(UTC, X.CH4.Diff))+
geom_point(aes(UTC, X.CH4., color = "red"))+
geom_point(aes(UTC, X.CH4.Smoothed, color = "blue"))+
labs(x = "UTC",
y = expression("CH"[4]*" concentration [ppb]"),
title = "Methane concentration vs. Time")
ggplot(TotalData) +
geom_point(aes(UTC, X.CH4.Diff))+
geom_point(aes(UTC, X.CH4.), color = "red")+
geom_point(aes(UTC, X.CH4.Smoothed), color = "blue")+
labs(x = "UTC",
y = expression("CH"[4]*" concentration [ppb]"),
title = "Methane concentration vs. Time")
source("~/.active-rstudio-document", echo=TRUE)
source("~/Documents/Uni/MasterThesis/4_Scrips_and_Data/3_Scripts/Peaks_Overlay_Medium.R", echo=TRUE)
