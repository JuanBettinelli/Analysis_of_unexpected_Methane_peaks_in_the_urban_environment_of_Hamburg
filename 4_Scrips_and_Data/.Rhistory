# basic plot
windRose(mydata)
# one windRose for each year
windRose(mydata,type = "year")
# windRose in 10 degree intervals with gridlines and width adjusted
if (FALSE) {
windRose(mydata, angle = 10, width = 0.2, grid.line = 1)
}
# windRose in 10 degree intervals with gridlines and width adjusted
if (FALSE) {
windRose(mydata, angle = 10, width = 0.2, grid.line = 1)
}
# pollutionRose of nox
pollutionRose(mydata, pollutant = "nox")
## source apportionment plot - contribution to mean
if (FALSE) {
pollutionRose(mydata, pollutant = "pm10", type = "year", statistic = "prop.mean")
}
# windRose in 10 degree intervals with gridlines and width adjusted
if (TRUE) {
windRose(mydata, angle = 10, width = 0.2, grid.line = 1)
}
## source apportionment plot - contribution to mean
if (TRUE) {
pollutionRose(mydata, pollutant = "pm10", type = "year", statistic = "prop.mean")
}
## example of comparing 2 met sites
## first we will make some new ws/wd data with a postive bias
mydata$ws2 = mydata$ws + 2 * rnorm(nrow(mydata)) + 1
mydata$wd2 = mydata$wd + 30 * rnorm(nrow(mydata)) + 30
## need to correct negative wd
id <- which(mydata$wd2 < 0)
mydata$wd2[id] <- mydata$wd2[id] + 360
## results show postive bias in wd and ws
pollutionRose(mydata, ws = "ws", wd = "wd", ws2 = "ws2", wd2 = "wd2")
# pollutionRose of nox
pollutionRose(mydata, pollutant = "nox")
head(mydata)
## results show postive bias in wd and ws
pollutionRose(mydata, ws = "ws", wd = "wd", ws2 = "ws2", wd2 = "wd2")
if(!require('openair')) {
install.packages('openair')
library('openair')
}
# basic plot
windRose(mydata)
head(mydata)
# basic plot
windRose(mydata)
# one windRose for each year
windRose(mydata,type = "year")
windRose(TotalData, ws = "Speed", wd = "direction")
windRose(TotalData, ws = "Speed", wd = "Direction")
######## Finding the Peaks, The Average Meteorological Data during Peak, Saving csv File #########
CH4_Peaks <- CH4_Peak_Finder(TotalData, StartTime, FinishTime)
source("~/Documents/Uni/MasterThesis/4_Scrips_and_Data/3_Scripts/Plotting_With_Compleate_CSV_File_Data.R", echo=TRUE)
source("3_Scripts/Functions.R")
CH4_Peaks <- CH4_Peak_Finder(TotalData, StartTime, FinishTime)
windRose(TotalData, ws = "Speed", wd = "Direction")
windRose(CH4_Peaks, ws = "Speed", wd = "Direction")
windRose(TotalData, ws = "Speed", wd = "Direction")
windRose(CH4_Peaks, ws = "Speed", wd = "Direction")
windRose(TotalData, ws = "Speed", wd = "Direction")
windRose(CH4_Peaks, ws = "Speed", wd = "Direction")
source("~/Documents/Uni/MasterThesis/4_Scrips_and_Data/3_Scripts/Playing with ggplot.R", echo=TRUE)
pollutionRose(TotalData, pollutant = "X.CH4.")
pollutionRose(CH4_Peaks, pollutant = "X.CH4.")
# pollutionRose of nox
pollutionRose(mydata, pollutant = "nox")
head(mydata)
pollutionRose(TotalData,ws = "Speed", wd = "Direction", pollutant = "X.CH4.")
## source apportionment plot - contribution to mean
if (TRUE) {
pollutionRose(mydata, pollutant = "pm10", type = "year", statistic = "prop.mean")
}
pollutionRose(TotalData,ws = "Speed", wd = "Direction", pollutant = "X.CH4.", , statistic = "prop.mean")
print(windRose(TotalData, ws = "Speed", wd = "Direction"))
pollutionRose(TotalData, ws = "Speed", wd = "Direction", pollutant = "X.CH4.",statistic = "prop.mean")
test1 <- pollutionRose(TotalData, ws = "Speed", wd = "Direction", pollutant = "X.CH4.",statistic = "prop.mean")
test1
df1 = rename(TotalData,c("Speed"="ws1","Direction"="wd1"))
df2 = rename(CH4_Peaks,c("Speed"="ws2","Direction"="wd2"))
df1 = rename(TotalData,c("Speed"="ws1","Direction"="wd1"))
df1 = rename(TotalData,c("ws1"="Speed","wd1"="Direction"))
# Script to Plot the Data From the "CombineMeteorologicalData.csv" created by the script "Combine_All_Data_To_CSV_File.R"
# Author Juan Bettinelli
# Last change: 19.1.23
# Script just to Play, 25.1.23!!!!!!
library(pacman)
library(lubridate)
library(readr)
library(plyr)
library(tidyverse)
library(ggplot2)
library(hexbin)
library(gridExtra)
library(reshape2)
library(cowplot)
library(patchwork)
pacman::p_load(pacman, dplyr, GGally, ggplot2, ggthemes,
ggvis, httr, lubridate, plotly, rio, rmarkdown, shiny,
stringr, tidyr)
#Set Working Directory, Set it into the folder "MasterThesis/4_Scrips_and_Data" to automaticaly access the data.
setwd("/Users/juanbettinelli/Documents/Uni/MasterThesis/4_Scrips_and_Data")
setwd("/Users/juanbettinelli/Documents/Uni/MasterThesis/4_Scrips_and_Data")
StartTime <- as.POSIXct('2021-08-01 22:03:00',
format = "%Y-%m-%d %H:%M:%S",
tz ="utc")
# Start Time: 2021-08-01 22:03:00
FinishTime <- as.POSIXct('2021-08-7 00:00:00',
format = "%Y-%m-%d %H:%M:%S",
tz ="utc")
# Total Timeseries: 2022-03-29 00:00:00
# Hamburg Campagne Timeseries: 2021-09-06 00:00:00
# Hamburg Campaine #2: 2021-09-17 10:21:00
########### Read the CSV File #############
TotalData <- import("4_Data/OutputData/CombineMeteorologicalData.csv")
TotalData$UTC <- as.POSIXct(as.character(TotalData$UTC),
format = "%Y-%m-%d %H:%M:%S",
tz = "UTC")
TotalData$X.CH4. <- as.numeric(TotalData$X.CH4.)
TotalData <- filter(TotalData, TotalData$UTC > StartTime & TotalData$UTC < FinishTime, .preserve = FALSE)
TotalData$UTC <- as.POSIXct(TotalData$UTC,
format = "%d-%m-%Y %H:%M:%S",
tz = "utc")
TotalData$Direction[TotalData$Direction > 361] <- NA
TotalData$Speed[TotalData$Speed > 99] <- NA
########## ?????????????? #########
# cor(TotalData$WindSpeed,TotalData$WindDirction)
######## Plot CH4/Water level#############
#
TotalData_CH4_WL <- TotalData[complete.cases(TotalData[ , c("UTC", "X.CH4.")]), c("UTC", "X.CH4.")]
# test <- findpeaks(TotalData_CH4_WL$X.CH4., minpeakdistance = 50 , sortstr=TRUE) #npeaks=4, threshold=1, minpeakdistance = 100
# TotalData_CH4_WL[test[,2],]
#
# for (i in test[,2]){
#   TotalData_CH4_WL['X.CH4.'][TotalData_CH4_WL['c'] == 14] <- 24
#
#   TotalData_CH4_WL$Peak <- 1
# }
# CH4_Peaks <- as.data.frame(findpeaks(TotalData_CH4_WL$X.CH4., minpeakdistance = 5, threshold = 30, sortstr=TRUE))
# names(CH4_Peaks) <- c("CH4", "UTC", "UTC_Beginning", "UTC_Ending")
# CH4_Peaks$UTC_Beginning <- TotalData_CH4_WL[CH4_Peaks$UTC_Beginning,"UTC"]
# CH4_Peaks$UTC_Ending <- TotalData_CH4_WL[CH4_Peaks$UTC_Ending,"UTC"]
# CH4_Peaks$UTC <- TotalData_CH4_WL[CH4_Peaks$UTC,"UTC"]
# plot(TotalData_CH4_WL, type="l", col="navy")
# grid()
# points(CH4_Peaks$UTC, CH4_Peaks$CH4, pch=20, col="maroon")
# rect(xleft=CH4_Peaks$UTC_Beginning,xright = CH4_Peaks$UTC_Ending, ybottom= range(TotalData_CH4_WL$X.CH4.)[1] ,ytop=range(TotalData_CH4_WL$X.CH4.)[2], density=10, col = "blue") # ybottom=range(CVD$cvd)[1],ytop=range(CVD$cvd)[2],
# abline(v=CH4_Peaks$UTC_Beginning, col="green")
# abline(v=CH4_Peaks$UTC_Ending, col="red")
panel_function <- function(TotalData, n){
if (n == 0){
#for fixed panel
TotalData$panel[TotalData$UTC <= "2021-08-10 23:59:00"] <- 0
TotalData$panel[TotalData$UTC >= "2021-08-11 00:00:00" & TotalData$UTC <= "2021-08-18 23:59:00"] <- 1
TotalData$panel[TotalData$UTC >= "2021-08-19 00:00:00" & TotalData$UTC <= "2021-08-28 23:59:00"] <- 2
TotalData$panel[TotalData$UTC >= "2021-08-29 00:00:00"] <- 3
return(TotalData)
}
else{
#for automatic panel
TotalData <- TotalData %>% mutate(panel = as.integer(((row_number()-1)/nrow(TotalData))*n))
return(TotalData)
}
}
panel_No_function <- function(n){
if (n == 0){
m <- 1
return(m)
}
else{
m <- n
return(m)
}
}
#
# # Function to Plot a CH4 Timeline with A Peak detection
# CH4_Peak_Finder <- function(TotalData, StartTime, FinishTime){
#
#
#   #Select the Data from dataframe with CH4 Concentration
#   CH4Data <- TotalData[complete.cases(TotalData[ , "X.CH4."]),c("UTC", "X.CH4.")]
#
#   # Find the Peaks in the timeline
#   CH4_Peaks <- as.data.frame(findpeaks(CH4Data$X.CH4., minpeakdistance = 10, threshold = 5, sortstr=TRUE)) # "[+]{1,}[0]{1,2}[-]{1,}" peakpat = NULL,
#
#   # Format the Peak Dataframe
#   names(CH4_Peaks) <- c("X.CH4.", "UTC", "UTC_Beginning", "UTC_Ending")
#   CH4_Peaks$UTC_Beginning <- CH4Data[CH4_Peaks$UTC_Beginning,"UTC"]
#   CH4_Peaks$UTC_Ending <- CH4Data[CH4_Peaks$UTC_Ending,"UTC"]
#   CH4_Peaks$UTC <- CH4Data[CH4_Peaks$UTC,"UTC"]
#
#   # Find the average during the Peak, (Average all values that lay between the Peak beginning and Peak End)
#   # get all Coloum Names
#   Heads <- colnames(TotalData)
#   for (j in Heads){
#     # Create new Coloums with same Names
#     CH4_Peaks[,j] <- NA
#     for(i in 1:nrow(CH4_Peaks)) {       # for-loop over rows
#       # Find the mean Values during the Peak
#       CH4_Peaks[i, j] <- mean(TotalData[TotalData$UTC >= CH4_Peaks[i,"UTC_Beginning"] & TotalData$UTC <= CH4_Peaks[i,"UTC_Ending"], j], na.rm = TRUE)
#     }
#   }
#   write.csv(CH4_Peaks, "4_Data/OutputData/CH4_Peaks.csv", row.names=TRUE)
#   # return(CH4_Peaks)
# }
#
#
# CH4_Peak_Finder(TotalData, StartTime, FinishTime)
df1 <- TotalData[complete.cases(TotalData[ , c("Speed", "Direction")]), c("UTC", "Speed", "Direction")]
rename(df1,c("ws1"="Speed","wd1"="Direction"))
df1 <- rename(df1,c("ws1"="Speed","wd1"="Direction"))
df2 <- TotalData[complete.cases(CH4_Peaks[ , c("Speed", "Direction")]), c("UTC", "Speed", "Direction")]
df2 = rename(CH4_Peaks,c("ws1"="Speed","wd1"="Direction"))
new = merge(df1,df2,all=TRUE)
df1 <- TotalData[complete.cases(TotalData[ , c("Speed", "Direction")]), c("UTC", "Speed", "Direction")]
df1 <- rename(df1,c("ws1"="Speed","wd1"="Direction"))
df2 <- TotalData[complete.cases(CH4_Peaks[ , c("Speed", "Direction")]), c("UTC", "Speed", "Direction")]
df2 = rename(CH4_Peaks,c("ws1"="Speed","wd1"="Direction"))
new = merge(df1,df2,all=TRUE)
View(df1)
View(df2)
View(df1)
View(df2)
View(df1)
View(df2)
df2 <- TotalData[complete.cases(CH4_Peaks[ , c("Speed", "Direction")]), c("UTC", "Speed", "Direction")]
df2 = rename(CH4_Peaks,c("ws2"="Speed","wd2"="Direction"))
View(df2)
View(df1)
View(CH4_Peaks)
View(TotalData)
View(df1)
View(df2)
CH4_Peaks <- CH4_Peak_Finder(TotalData, StartTime, FinishTime)
df2 <- TotalData[complete.cases(CH4_Peaks[ , c("Speed", "Direction")]), c("UTC", "Speed", "Direction")]
df2 = rename(CH4_Peaks,c("ws2"="Speed","wd2"="Direction"))
View(df2)
source("~/Documents/Uni/MasterThesis/4_Scrips_and_Data/3_Scripts/Playing with ggplot.R", echo=TRUE)
View(CH4_Peaks)
View(CH4_Peaks)
View(df1)
df2 <- TotalData[complete.cases(CH4_Peaks[ , c("Speed", "Direction")]), c("UTC", "Speed", "Direction")]
df2 <- rename(CH4_Peaks,c("ws2"="Speed","wd2"="Direction"))
View(df2)
View(df1)
CH4_Peaks <- CH4_Peak_Finder(TotalData, StartTime, FinishTime)
View(df2)
source("~/Documents/Uni/MasterThesis/4_Scrips_and_Data/3_Scripts/Playing with ggplot.R", echo=TRUE)
df2 <- CH4_Peaks[complete.cases(CH4_Peaks[ , c("Speed", "Direction")]), c("UTC", "Speed", "Direction")]
df2 <- rename(CH4_Peaks,c("ws2"="Speed","wd2"="Direction"))
CH4_Peaks <- CH4_Peak_Finder(TotalData, StartTime, FinishTime)
df1 <- TotalData[complete.cases(TotalData[ , c("Speed", "Direction")]), c("UTC", "Speed", "Direction")]
df1 <- rename(df1,c("ws1"="Speed","wd1"="Direction"))
df2 <- CH4_Peaks[complete.cases(CH4_Peaks[ , c("Speed", "Direction")]), c("UTC", "Speed", "Direction")]
df2 <- rename(CH4_Peaks,c("ws2"="Speed","wd2"="Direction"))
new <- merge(df1,df2,all=TRUE)
TotalData <- merge( df1, df2,
by.x = "UTC",
by.y = "UTC",
all.x = TRUE,
all.y = TRUE,
sort = TRUE)
View(df1)
source("~/Documents/Uni/MasterThesis/4_Scrips_and_Data/3_Scripts/Playing with ggplot.R", echo=TRUE)
View(CH4_Peaks)
View(df1)
View(df2)
View(CH4_Peaks)
as.POSIXct(CH4_Peaks$UTC)
######## Finding the Peaks, The Average Meteorological Data during Peak, Saving csv File #########
CH4_Peaks <- CH4_Peak_Finder(TotalData, StartTime, FinishTime)
View(CH4_Peaks)
View(CH4Data)
View(TotalData)
View(CH4_Peaks)
View(CH4_Peaks)
source("~/Documents/Uni/MasterThesis/4_Scrips_and_Data/3_Scripts/Playing with ggplot.R", echo=TRUE)
View(CH4_Peaks)
View(df2)
source("~/Documents/Uni/MasterThesis/4_Scrips_and_Data/3_Scripts/Playing with ggplot.R", echo=TRUE)
source("~/Documents/Uni/MasterThesis/4_Scrips_and_Data/3_Scripts/Playing with ggplot.R", echo=TRUE)
source("~/Documents/Uni/MasterThesis/4_Scrips_and_Data/3_Scripts/Playing with ggplot.R", echo=TRUE)
source("~/Documents/Uni/MasterThesis/4_Scrips_and_Data/3_Scripts/Playing with ggplot.R", echo=TRUE)
head(CH4_Peaks, n =2)
source("~/Documents/Uni/MasterThesis/4_Scrips_and_Data/3_Scripts/Playing with ggplot.R", echo=TRUE)
source("~/Documents/Uni/MasterThesis/4_Scrips_and_Data/3_Scripts/Playing with ggplot.R", echo=TRUE)
source("~/Documents/Uni/MasterThesis/4_Scrips_and_Data/3_Scripts/Playing with ggplot.R", echo=TRUE)
source("~/Documents/Uni/MasterThesis/4_Scrips_and_Data/3_Scripts/Playing with ggplot.R", echo=TRUE)
source("~/Documents/Uni/MasterThesis/4_Scrips_and_Data/3_Scripts/Playing with ggplot.R", echo=TRUE)
source("~/Documents/Uni/MasterThesis/4_Scrips_and_Data/3_Scripts/Playing with ggplot.R", echo=TRUE)
source("~/Documents/Uni/MasterThesis/4_Scrips_and_Data/3_Scripts/Playing with ggplot.R", echo=TRUE)
source("~/Documents/Uni/MasterThesis/4_Scrips_and_Data/3_Scripts/Playing with ggplot.R", echo=TRUE)
source("~/Documents/Uni/MasterThesis/4_Scrips_and_Data/3_Scripts/Playing with ggplot.R", echo=TRUE)
View(CH4_Peaks)
source("~/Documents/Uni/MasterThesis/4_Scrips_and_Data/3_Scripts/Playing with ggplot.R", echo=TRUE)
source("~/Documents/Uni/MasterThesis/4_Scrips_and_Data/3_Scripts/Playing with ggplot.R", echo=TRUE)
source("~/Documents/Uni/MasterThesis/4_Scrips_and_Data/3_Scripts/Playing with ggplot.R", echo=TRUE)
View(CH4_Peaks)
View(CH4Data)
View(df1)
View(df2)
View(CH4_Peaks)
df2 <- CH4_Peaks[complete.cases(CH4_Peaks[ , c("Speed", "Direction")]), c("UTC", "Speed", "Direction")]
df2 <- rename(CH4_Peaks,c("ws2"="Speed","wd2"="Direction"))
source("~/Documents/Uni/MasterThesis/4_Scrips_and_Data/3_Scripts/Playing with ggplot.R", echo=TRUE)
df2 <- CH4_Peaks[complete.cases(CH4_Peaks[ , c("Speed", "Direction")]), c("UTC", "Speed", "Direction")]
View(df2)
source("~/Documents/Uni/MasterThesis/4_Scrips_and_Data/3_Scripts/Playing with ggplot.R", echo=TRUE)
source("~/Documents/Uni/MasterThesis/4_Scrips_and_Data/3_Scripts/Playing with ggplot.R", echo=TRUE)
df1 <- TotalData[complete.cases(TotalData[ , c("Speed", "Direction")]), c("UTC", "Speed", "Direction")]
df1 <- rename(df1,c("ws1"="Speed","wd1"="Direction"))
df2 <- CH4_Peaks[complete.cases(CH4_Peaks[ , c("Speed", "Direction")]), c("UTC", "Speed", "Direction")]
df2 <- rename(CH4_Peaks,c("ws2"="Speed","wd2"="Direction"))
source("~/Documents/Uni/MasterThesis/4_Scrips_and_Data/3_Scripts/Playing with ggplot.R", echo=TRUE)
source("~/Documents/Uni/MasterThesis/4_Scrips_and_Data/3_Scripts/Playing with ggplot.R", echo=TRUE)
source("~/Documents/Uni/MasterThesis/4_Scrips_and_Data/3_Scripts/Playing with ggplot.R", echo=TRUE)
source("~/Documents/Uni/MasterThesis/4_Scrips_and_Data/3_Scripts/Playing with ggplot.R", echo=TRUE)
pollutionRose(mydata, ws = "ws_All", wd = "wd_All", ws2 = "ws_Peaks", wd2 = "wd_All")
pollutionRose(mydata, ws = "ws_All", wd = "wd_All", ws2 = "ws_Peaks", wd2 = "wd_Peaks")
pollutionRose(mydata, ws = "ws_All", wd = "wd_All", ws2 = "ws_Peaks", wd2 = "wd_Peaks")
pollutionRose(Wind_Compare, ws = "ws_All", wd = "wd_All", ws2 = "ws_Peaks", wd2 = "wd_Peaks")
source("~/Documents/Uni/MasterThesis/4_Scrips_and_Data/3_Scripts/Playing with ggplot.R", echo=TRUE)
pollutionRose(TotalData, ws = "Speed", wd = "Direction", pollutant = "X.CH4.",statistic = "prop.mean")
pollutionRose(CH4_Peaks, ws = "Speed", wd = "Direction", pollutant = "X.CH4.",statistic = "prop.mean")
source("~/Documents/Uni/MasterThesis/4_Scrips_and_Data/3_Scripts/Playing with ggplot.R", echo=TRUE)
source("~/Documents/Uni/MasterThesis/4_Scrips_and_Data/3_Scripts/Playing with ggplot.R", echo=TRUE)
# Script to Plot the Data From the "CombineMeteorologicalData.csv" created by the script "Combine_All_Data_To_CSV_File.R"
# Author Juan Bettinelli
# Last change: 26.1.23
library(pacman)
library(lubridate)
library(readr)
library(plyr)
library(tidyverse)
library(ggplot2)
library(hexbin)
library(gridExtra)
library(reshape2)
pacman::p_load(pacman, dplyr, GGally, ggplot2, ggthemes,
ggvis, httr, lubridate, plotly, rio, rmarkdown, shiny,
stringr, tidyr)
#Set Working Directory, Set it into the folder "MasterThesis/4_Scrips_and_Data" to automaticaly access the data.
setwd("/Users/juanbettinelli/Documents/Uni/MasterThesis/4_Scrips_and_Data")
source("3_Scripts/Functions.R")
StartTime <- as.POSIXct('2021-08-01 22:03:00',
format = "%Y-%m-%d %H:%M:%S",
tz ="utc")
# Start Time: 2021-08-01 22:03:00
FinishTime <- as.POSIXct('2022-03-29 00:00:00',
format = "%Y-%m-%d %H:%M:%S",
tz ="utc")
# Total Timeseries: 2022-03-29 00:00:00
# Hamburg Campagne Timeseries: 2021-09-06 00:00:00
# Hamburg Campaine #2: 2021-09-17 10:21:00
########### Read the CSV File #############
TotalData <- import("4_Data/OutputData/CombineMeteorologicalData.csv")
TotalData$UTC <- as.POSIXct(as.character(TotalData$UTC),
format = "%Y-%m-%d %H:%M:%S",
tz = "UTC")
TotalData$X.CH4. <- as.numeric(TotalData$X.CH4.)
TotalData <- filter(TotalData, TotalData$UTC > StartTime & TotalData$UTC < FinishTime, .preserve = FALSE)
TotalData$UTC <- as.POSIXct(TotalData$UTC,
format = "%d-%m-%Y %H:%M:%S",
tz = "utc")
TotalData$Direction[TotalData$Direction > 361] <- NA
TotalData$Speed[TotalData$Speed > 99] <- NA
########## ?????????????? #########
# cor(TotalData$WindSpeed,TotalData$WindDirction)
######## Finding the Peaks, The Average Meteorological Data during Peak, Saving csv File #########
CH4_Peaks <- CH4_Peak_Finder(TotalData, StartTime, FinishTime)
########### 4 Plot CH4 Concentration Timeseries ##############
CH4_TimeLine(TotalData, StartTime, FinishTime, 10, FALSE)
######## Finding the Peaks, The Average Meteorological Data during Peak, Saving csv File #########
CH4_Peak_Finder(TotalData, StartTime, FinishTime, TRUE)
# Script to Plot the Data From the "CombineMeteorologicalData.csv" created by the script "Combine_All_Data_To_CSV_File.R"
# Author Juan Bettinelli
# Last change: 26.1.23
library(pacman)
library(lubridate)
library(readr)
library(plyr)
library(tidyverse)
library(ggplot2)
library(hexbin)
library(gridExtra)
library(reshape2)
pacman::p_load(pacman, dplyr, GGally, ggplot2, ggthemes,
ggvis, httr, lubridate, plotly, rio, rmarkdown, shiny,
stringr, tidyr)
#Set Working Directory, Set it into the folder "MasterThesis/4_Scrips_and_Data" to automaticaly access the data.
setwd("/Users/juanbettinelli/Documents/Uni/MasterThesis/4_Scrips_and_Data")
source("3_Scripts/Functions.R")
StartTime <- as.POSIXct('2021-08-01 22:03:00',
format = "%Y-%m-%d %H:%M:%S",
tz ="utc")
# Start Time: 2021-08-01 22:03:00
FinishTime <- as.POSIXct('2022-03-29 00:00:00',
format = "%Y-%m-%d %H:%M:%S",
tz ="utc")
# Total Timeseries: 2022-03-29 00:00:00
# Hamburg Campagne Timeseries: 2021-09-06 00:00:00
# Hamburg Campaine #2: 2021-09-17 10:21:00
########### Read the CSV File #############
TotalData <- import("4_Data/OutputData/CombineMeteorologicalData.csv")
TotalData$UTC <- as.POSIXct(as.character(TotalData$UTC),
format = "%Y-%m-%d %H:%M:%S",
tz = "UTC")
TotalData$X.CH4. <- as.numeric(TotalData$X.CH4.)
TotalData <- filter(TotalData, TotalData$UTC > StartTime & TotalData$UTC < FinishTime, .preserve = FALSE)
TotalData$UTC <- as.POSIXct(TotalData$UTC,
format = "%d-%m-%Y %H:%M:%S",
tz = "utc")
TotalData$Direction[TotalData$Direction > 361] <- NA
TotalData$Speed[TotalData$Speed > 99] <- NA
########## ?????????????? #########
# cor(TotalData$WindSpeed,TotalData$WindDirction)
######## Finding the Peaks, The Average Meteorological Data during Peak, Saving csv File #########
CH4_Peak_Finder(TotalData, StartTime, FinishTime, TRUE)
# Script to Plot the Data From the "CombineMeteorologicalData.csv" created by the script "Combine_All_Data_To_CSV_File.R"
# Author Juan Bettinelli
# Last change: 26.1.23
library(pacman)
library(lubridate)
library(readr)
library(plyr)
library(tidyverse)
library(ggplot2)
library(hexbin)
library(gridExtra)
library(reshape2)
pacman::p_load(pacman, dplyr, GGally, ggplot2, ggthemes,
ggvis, httr, lubridate, plotly, rio, rmarkdown, shiny,
stringr, tidyr)
#Set Working Directory, Set it into the folder "MasterThesis/4_Scrips_and_Data" to automaticaly access the data.
setwd("/Users/juanbettinelli/Documents/Uni/MasterThesis/4_Scrips_and_Data")
source("3_Scripts/Functions.R")
StartTime <- as.POSIXct('2021-08-01 22:03:00',
format = "%Y-%m-%d %H:%M:%S",
tz ="utc")
# Start Time: 2021-08-01 22:03:00
FinishTime <- as.POSIXct('2022-03-29 00:00:00',
format = "%Y-%m-%d %H:%M:%S",
tz ="utc")
# Total Timeseries: 2022-03-29 00:00:00
# Hamburg Campagne Timeseries: 2021-09-06 00:00:00
# Hamburg Campaine #2: 2021-09-17 10:21:00
########### Read the CSV File #############
TotalData <- import("4_Data/OutputData/CombineMeteorologicalData.csv")
TotalData$UTC <- as.POSIXct(as.character(TotalData$UTC),
format = "%Y-%m-%d %H:%M:%S",
tz = "UTC")
TotalData$X.CH4. <- as.numeric(TotalData$X.CH4.)
TotalData <- filter(TotalData, TotalData$UTC > StartTime & TotalData$UTC < FinishTime, .preserve = FALSE)
TotalData$UTC <- as.POSIXct(TotalData$UTC,
format = "%d-%m-%Y %H:%M:%S",
tz = "utc")
TotalData$Direction[TotalData$Direction > 361] <- NA
TotalData$Speed[TotalData$Speed > 99] <- NA
########### 4 Plot CH4 Concentration Timeseries ##############
CH4_TimeLine(TotalData, StartTime, FinishTime, 10, FALSE)
source("~/Documents/Uni/MasterThesis/4_Scrips_and_Data/3_Scripts/Plotting_With_Compleate_CSV_File_Data.R", echo=TRUE)
source("~/Documents/Uni/MasterThesis/4_Scrips_and_Data/3_Scripts/Plotting_With_Compleate_CSV_File_Data.R", echo=TRUE)
source("3_Scripts/Functions.R")
######### Wind Rose Plots ##########
WindRose_Plots(TotalData)
######### Wind Rose Plots ##########
WindRose_Plots(TotalData)
# Script to Plot the Data From the "CombineMeteorologicalData.csv" created by the script "Combine_All_Data_To_CSV_File.R"
# Author Juan Bettinelli
# Last change: 26.1.23
library(pacman)
library(lubridate)
library(readr)
library(plyr)
library(tidyverse)
library(ggplot2)
library(hexbin)
library(gridExtra)
library(reshape2)
library(openair)
pacman::p_load(pacman, dplyr, GGally, ggplot2, ggthemes,
ggvis, httr, lubridate, plotly, rio, rmarkdown, shiny,
stringr, tidyr)
#Set Working Directory, Set it into the folder "MasterThesis/4_Scrips_and_Data" to automaticaly access the data.
setwd("/Users/juanbettinelli/Documents/Uni/MasterThesis/4_Scrips_and_Data")
source("3_Scripts/Functions.R")
StartTime <- as.POSIXct('2021-08-01 22:03:00',
format = "%Y-%m-%d %H:%M:%S",
tz ="utc")
# Start Time: 2021-08-01 22:03:00
FinishTime <- as.POSIXct('2022-03-29 00:00:00',
format = "%Y-%m-%d %H:%M:%S",
tz ="utc")
# Total Timeseries: 2022-03-29 00:00:00
# Hamburg Campagne Timeseries: 2021-09-06 00:00:00
# Hamburg Campaine #2: 2021-09-17 10:21:00
########### Read the CSV File #############
TotalData <- import("4_Data/OutputData/CombineMeteorologicalData.csv")
TotalData$UTC <- as.POSIXct(as.character(TotalData$UTC),
format = "%Y-%m-%d %H:%M:%S",
tz = "UTC")
TotalData$X.CH4. <- as.numeric(TotalData$X.CH4.)
TotalData <- filter(TotalData, TotalData$UTC > StartTime & TotalData$UTC < FinishTime, .preserve = FALSE)
TotalData$UTC <- as.POSIXct(TotalData$UTC,
format = "%d-%m-%Y %H:%M:%S",
tz = "utc")
TotalData$Direction[TotalData$Direction > 361] <- NA
TotalData$Speed[TotalData$Speed > 99] <- NA
######### Wind Rose Plots ##########
WindRose_Plots(TotalData)
