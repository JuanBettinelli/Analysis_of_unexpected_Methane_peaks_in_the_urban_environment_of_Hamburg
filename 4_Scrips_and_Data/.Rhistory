View(TotalData_CH4_WL)
View(TotalData_Wind)
source("3_Scripts/Functions.R")
Compare_Timeline(TotalData, 4)
source("3_Scripts/Functions.R")
Compare_Timeline(TotalData, 4)
source("3_Scripts/Functions.R")
Compare_Timeline(TotalData, 4)
TotalData_CH4_WL <- TotalData[complete.cases(TotalData[ , c("UTC", "X.CH4.")]),]
TotalData_CH4_WL <- TotalData_CH4_WL[TotalData_CH4_WL$UTC <= "2021-08-10 23:59:00"] %>% mutate(panel = as.integer(0))
else if(TotalData_CH4_WL$UTC >= "2021-08-19 00:00:00" & TotalData_CH4_WL$UTC <= "2021-08-28 23:59:00"){
TotalData_CH4_WL <- TotalData[complete.cases(TotalData[ , c("UTC", "X.CH4.")]),]
Check_Panel <- function(){
if (TotalData_CH4_WL$UTC <= "2021-08-10 23:59:00") {
return(0)
}
else if(TotalData_CH4_WL$UTC >= "2021-08-11 00:00:00" & TotalData_CH4_WL$UTC <= "2021-08-18 23:59:00"){
return(1)
}
else if(TotalData_CH4_WL$UTC >= "2021-08-19 00:00:00" & TotalData_CH4_WL$UTC <= "2021-08-28 23:59:00"){
return(2)
}
else if(TotalData_CH4_WL$UTC >= "2021-08-29 00:00:00"){
return(3)
}
}
TotalData_CH4_WL <- TotalData_CH4_WL %>% mutate(panel = as.integer(Check_Panel(TotalData_CH4_WL)))
TotalData_CH4_WL <- TotalData_CH4_WL %>% mutate(panel = Check_Panel(TotalData_CH4_WL))
Check_Panel(TotalData_CH4_WL)
TotalData_CH4_WL <- TotalData[complete.cases(TotalData[ , c("UTC", "X.CH4.")]),]
Check_Panel <- function(){
if (TotalData_CH4_WL$UTC <= "2021-08-10 23:59:00") {
return(0)
}
else if(TotalData_CH4_WL$UTC >= "2021-08-11 00:00:00" & TotalData_CH4_WL$UTC <= "2021-08-18 23:59:00"){
return(1)
}
else if(TotalData_CH4_WL$UTC >= "2021-08-19 00:00:00" & TotalData_CH4_WL$UTC <= "2021-08-28 23:59:00"){
return(2)
}
else if(TotalData_CH4_WL$UTC >= "2021-08-29 00:00:00"){
return(3)
}
}
Check_Panel(TotalData_CH4_WL)
Check_Panel <- function(TotalData_CH4_WL){
if (TotalData_CH4_WL$UTC <= "2021-08-10 23:59:00") {
return(0)
}
else if(TotalData_CH4_WL$UTC >= "2021-08-11 00:00:00" & TotalData_CH4_WL$UTC <= "2021-08-18 23:59:00"){
return(1)
}
else if(TotalData_CH4_WL$UTC >= "2021-08-19 00:00:00" & TotalData_CH4_WL$UTC <= "2021-08-28 23:59:00"){
return(2)
}
else if(TotalData_CH4_WL$UTC >= "2021-08-29 00:00:00"){
return(3)
}
}
Check_Panel(TotalData_CH4_WL)
source("3_Scripts/Functions.R")
Compare_Timeline(TotalData, 4)
source("3_Scripts/Functions.R")
Compare_Timeline(TotalData, 4)
source("3_Scripts/Functions.R")
Compare_Timeline(TotalData, 4)
source("3_Scripts/Functions.R")
Compare_Timeline(TotalData, 4)
TotalData_CH4_WL <- TotalData[complete.cases(TotalData[ , c("UTC", "X.CH4.")]),]
# fixed panel
TotalData_CH4_WL$panel[TotalData_CH4_WL$UTC <= "2021-08-10 23:59:00"] <- 0
TotalData_CH4_WL$panel[TotalData_CH4_WL$UTC >= "2021-08-11 00:00:00" & TotalData_CH4_WL$UTC <= "2021-08-18 23:59:00"] <- 1
TotalData_CH4_WL$panel[TotalData_CH4_WL$UTC >= "2021-08-19 00:00:00" & TotalData_CH4_WL$UTC <= "2021-08-28 23:59:00"] <- 2
TotalData_CH4_WL$panel[TotalData_CH4_WL$UTC >= "2021-08-29 00:00:00"] <- 3
# for automatic panel
# TotalData_CH4_WL <- TotalData_CH4_WL[TotalData_CH4_WL$UTC <= "2021-08-10 23:59:00"] %>% mutate(panel = as.integer(0))
# TotalData_CH4_WL <- TotalData_CH4_WL[TotalData_CH4_WL$UTC >= "2021-08-11 00:00:00" & TotalData_CH4_WL$UTC <= "2021-08-18 23:59:00"] %>% mutate(panel = as.integer(1))
# TotalData_CH4_WL <- TotalData_CH4_WL[TotalData_CH4_WL$UTC >= "2021-08-19 00:00:00" & TotalData_CH4_WL$UTC <= "2021-08-28 23:59:00"] %>% mutate(panel = as.integer(2))
# TotalData_CH4_WL <- TotalData_CH4_WL[TotalData_CH4_WL$UTC >= "2021-08-29 00:00:00"] %>% mutate(panel = as.integer(3))
# TotalData_CH4_WL <- TotalData_CH4_WL %>% mutate(panel = as.integer(((row_number()-1)/nrow(TotalData_CH4_WL))*n))
#
# Plot CH4, Waterlavel & Time
CH4_TimeLine <- ggplot(TotalData_CH4_WL) +
geom_line(aes(x = UTC,
y = X.CH4.),
col = "red") +
labs(x = "Fill Time [UTC]",
y ="CH4 Concentration [ppb]",
title = "CH4 Concentration & Elbe Waterlevel vs. Time") +
scale_x_datetime(date_breaks = "1 day",
date_labels = "%d-%b") +
theme(axis.text.x=element_text(angle=60, hjust=1),
axis.title.y = element_text(color = "red",
size=13),
axis.text.y = element_text(color = "red"),
axis.title.y.right = element_text(color = "blue",
size=13),
axis.text.y.right = element_text(color = "blue"),
strip.text.x = element_blank(),
panel.spacing=unit(c(0,0,0,0),
"cm"),
panel.margin=unit(c(0,0,0,0),
"cm")) +
geom_line(aes(x = UTC,
y = Water_Level*5),
col = "blue") +
scale_y_continuous(sec.axis = sec_axis(trans = ~./5,
name="Water Level, mm"))+
facet_wrap(~panel, scales = 'free', nrow = n)
n<-4
TotalData_CH4_WL <- TotalData[complete.cases(TotalData[ , c("UTC", "X.CH4.")]),]
# fixed panel
TotalData_CH4_WL$panel[TotalData_CH4_WL$UTC <= "2021-08-10 23:59:00"] <- 0
TotalData_CH4_WL$panel[TotalData_CH4_WL$UTC >= "2021-08-11 00:00:00" & TotalData_CH4_WL$UTC <= "2021-08-18 23:59:00"] <- 1
TotalData_CH4_WL$panel[TotalData_CH4_WL$UTC >= "2021-08-19 00:00:00" & TotalData_CH4_WL$UTC <= "2021-08-28 23:59:00"] <- 2
TotalData_CH4_WL$panel[TotalData_CH4_WL$UTC >= "2021-08-29 00:00:00"] <- 3
# for automatic panel
# TotalData_CH4_WL <- TotalData_CH4_WL[TotalData_CH4_WL$UTC <= "2021-08-10 23:59:00"] %>% mutate(panel = as.integer(0))
# TotalData_CH4_WL <- TotalData_CH4_WL[TotalData_CH4_WL$UTC >= "2021-08-11 00:00:00" & TotalData_CH4_WL$UTC <= "2021-08-18 23:59:00"] %>% mutate(panel = as.integer(1))
# TotalData_CH4_WL <- TotalData_CH4_WL[TotalData_CH4_WL$UTC >= "2021-08-19 00:00:00" & TotalData_CH4_WL$UTC <= "2021-08-28 23:59:00"] %>% mutate(panel = as.integer(2))
# TotalData_CH4_WL <- TotalData_CH4_WL[TotalData_CH4_WL$UTC >= "2021-08-29 00:00:00"] %>% mutate(panel = as.integer(3))
# TotalData_CH4_WL <- TotalData_CH4_WL %>% mutate(panel = as.integer(((row_number()-1)/nrow(TotalData_CH4_WL))*n))
#
# Plot CH4, Waterlavel & Time
CH4_TimeLine <- ggplot(TotalData_CH4_WL) +
geom_line(aes(x = UTC,
y = X.CH4.),
col = "red") +
labs(x = "Fill Time [UTC]",
y ="CH4 Concentration [ppb]",
title = "CH4 Concentration & Elbe Waterlevel vs. Time") +
scale_x_datetime(date_breaks = "1 day",
date_labels = "%d-%b") +
theme(axis.text.x=element_text(angle=60, hjust=1),
axis.title.y = element_text(color = "red",
size=13),
axis.text.y = element_text(color = "red"),
axis.title.y.right = element_text(color = "blue",
size=13),
axis.text.y.right = element_text(color = "blue"),
strip.text.x = element_blank(),
panel.spacing=unit(c(0,0,0,0),
"cm"),
panel.margin=unit(c(0,0,0,0),
"cm")) +
geom_line(aes(x = UTC,
y = Water_Level*5),
col = "blue") +
scale_y_continuous(sec.axis = sec_axis(trans = ~./5,
name="Water Level, mm"))+
facet_wrap(~panel, scales = 'free', nrow = n)
CH4_TimeLine
# for automatic panel
# TotalData_CH4_WL <- TotalData_CH4_WL[TotalData_CH4_WL$UTC <= "2021-08-10 23:59:00"] %>% mutate(panel = as.integer(0))
# TotalData_CH4_WL <- TotalData_CH4_WL[TotalData_CH4_WL$UTC >= "2021-08-11 00:00:00" & TotalData_CH4_WL$UTC <= "2021-08-18 23:59:00"] %>% mutate(panel = as.integer(1))
# TotalData_CH4_WL <- TotalData_CH4_WL[TotalData_CH4_WL$UTC >= "2021-08-19 00:00:00" & TotalData_CH4_WL$UTC <= "2021-08-28 23:59:00"] %>% mutate(panel = as.integer(2))
# TotalData_CH4_WL <- TotalData_CH4_WL[TotalData_CH4_WL$UTC >= "2021-08-29 00:00:00"] %>% mutate(panel = as.integer(3))
# TotalData_CH4_WL <- TotalData_CH4_WL %>% mutate(panel = as.integer(((row_number()-1)/nrow(TotalData_CH4_WL))*n))
#
# Plot CH4, Waterlavel & Time
CH4_TimeLine <- ggplot(TotalData_CH4_WL) +
geom_line(aes(x = UTC,
y = X.CH4.),
col = "red") +
labs(x = "Fill Time [UTC]",
y ="CH4 Concentration [ppb]",
title = "CH4 Concentration & Elbe Waterlevel vs. Time") +
scale_x_datetime(date_breaks = "1 day",
date_labels = "%d-%b") +
theme(axis.text.x=element_text(angle=60, hjust=1),
axis.title.y = element_text(color = "red",
size=13),
axis.text.y = element_text(color = "red"),
axis.title.y.right = element_text(color = "blue",
size=13),
axis.text.y.right = element_text(color = "blue"),
strip.text.x = element_blank(),
panel.spacing=unit(c(1,1,1,1),
"cm"),
panel.margin=unit(c(1,1,1,1),
"cm")) +
geom_line(aes(x = UTC,
y = Water_Level*5),
col = "blue") +
scale_y_continuous(sec.axis = sec_axis(trans = ~./5,
name="Water Level, mm"))+
facet_wrap(~panel, scales = 'free', nrow = n)
CH4_TimeLine
# for automatic panel
# TotalData_CH4_WL <- TotalData_CH4_WL[TotalData_CH4_WL$UTC <= "2021-08-10 23:59:00"] %>% mutate(panel = as.integer(0))
# TotalData_CH4_WL <- TotalData_CH4_WL[TotalData_CH4_WL$UTC >= "2021-08-11 00:00:00" & TotalData_CH4_WL$UTC <= "2021-08-18 23:59:00"] %>% mutate(panel = as.integer(1))
# TotalData_CH4_WL <- TotalData_CH4_WL[TotalData_CH4_WL$UTC >= "2021-08-19 00:00:00" & TotalData_CH4_WL$UTC <= "2021-08-28 23:59:00"] %>% mutate(panel = as.integer(2))
# TotalData_CH4_WL <- TotalData_CH4_WL[TotalData_CH4_WL$UTC >= "2021-08-29 00:00:00"] %>% mutate(panel = as.integer(3))
# TotalData_CH4_WL <- TotalData_CH4_WL %>% mutate(panel = as.integer(((row_number()-1)/nrow(TotalData_CH4_WL))*n))
#
# Plot CH4, Waterlavel & Time
CH4_TimeLine <- ggplot(TotalData_CH4_WL) +
geom_line(aes(x = UTC,
y = X.CH4.),
col = "red") +
labs(x = "Fill Time [UTC]",
y ="CH4 Concentration [ppb]",
title = "CH4 Concentration & Elbe Waterlevel vs. Time") +
scale_x_datetime(date_breaks = "1 day",
date_labels = "%d-%b") +
theme(axis.text.x=element_text(angle=60, hjust=1),
axis.title.y = element_text(color = "red",
size=13),
axis.text.y = element_text(color = "red"),
axis.title.y.right = element_text(color = "blue",
size=13),
axis.text.y.right = element_text(color = "blue"),
strip.text.x = element_blank()) +
geom_line(aes(x = UTC,
y = Water_Level*5),
col = "blue") +
scale_y_continuous(sec.axis = sec_axis(trans = ~./5,
name="Water Level, mm"))+
facet_wrap(~panel, scales = 'free', nrow = n)
CH4_TimeLine
# for automatic panel
# TotalData_CH4_WL <- TotalData_CH4_WL[TotalData_CH4_WL$UTC <= "2021-08-10 23:59:00"] %>% mutate(panel = as.integer(0))
# TotalData_CH4_WL <- TotalData_CH4_WL[TotalData_CH4_WL$UTC >= "2021-08-11 00:00:00" & TotalData_CH4_WL$UTC <= "2021-08-18 23:59:00"] %>% mutate(panel = as.integer(1))
# TotalData_CH4_WL <- TotalData_CH4_WL[TotalData_CH4_WL$UTC >= "2021-08-19 00:00:00" & TotalData_CH4_WL$UTC <= "2021-08-28 23:59:00"] %>% mutate(panel = as.integer(2))
# TotalData_CH4_WL <- TotalData_CH4_WL[TotalData_CH4_WL$UTC >= "2021-08-29 00:00:00"] %>% mutate(panel = as.integer(3))
# TotalData_CH4_WL <- TotalData_CH4_WL %>% mutate(panel = as.integer(((row_number()-1)/nrow(TotalData_CH4_WL))*n))
#
# Plot CH4, Waterlavel & Time
CH4_TimeLine <- ggplot(TotalData_CH4_WL) +
geom_line(aes(x = UTC,
y = X.CH4.),
col = "red") +
labs(x = "Fill Time [UTC]",
y ="CH4 Concentration [ppb]",
title = "CH4 Concentration & Elbe Waterlevel vs. Time") +
scale_x_datetime(date_breaks = "1 day",
date_labels = "%d-%b") +
theme(axis.text.x=element_text(angle=60, hjust=1),
axis.title.y = element_text(color = "red",
size=13),
axis.text.y = element_text(color = "red"),
axis.title.y.right = element_text(color = "blue",
size=13),
axis.text.y.right = element_text(color = "blue"),
strip.text.x = element_blank(),
plot.margin = margin(1, 1, 2, 2, "cm")) +
geom_line(aes(x = UTC,
y = Water_Level*5),
col = "blue") +
scale_y_continuous(sec.axis = sec_axis(trans = ~./5,
name="Water Level, mm"))+
facet_wrap(~panel, scales = 'free', nrow = n)
CH4_TimeLine
#Export the plot to PNG file
ggsave("1_CH4_WL.png", CH4_TimeLine, path = "4_Data/OutputData/Plots", width = 10, height = 5)
# for automatic panel
# TotalData_CH4_WL <- TotalData_CH4_WL[TotalData_CH4_WL$UTC <= "2021-08-10 23:59:00"] %>% mutate(panel = as.integer(0))
# TotalData_CH4_WL <- TotalData_CH4_WL[TotalData_CH4_WL$UTC >= "2021-08-11 00:00:00" & TotalData_CH4_WL$UTC <= "2021-08-18 23:59:00"] %>% mutate(panel = as.integer(1))
# TotalData_CH4_WL <- TotalData_CH4_WL[TotalData_CH4_WL$UTC >= "2021-08-19 00:00:00" & TotalData_CH4_WL$UTC <= "2021-08-28 23:59:00"] %>% mutate(panel = as.integer(2))
# TotalData_CH4_WL <- TotalData_CH4_WL[TotalData_CH4_WL$UTC >= "2021-08-29 00:00:00"] %>% mutate(panel = as.integer(3))
# TotalData_CH4_WL <- TotalData_CH4_WL %>% mutate(panel = as.integer(((row_number()-1)/nrow(TotalData_CH4_WL))*n))
#
# Plot CH4, Waterlavel & Time
CH4_TimeLine <- ggplot(TotalData_CH4_WL) +
geom_line(aes(x = UTC,
y = X.CH4.),
col = "red") +
labs(x = "Fill Time [UTC]",
y ="CH4 Concentration [ppb]",
title = "CH4 Concentration & Elbe Waterlevel vs. Time") +
scale_x_datetime(date_breaks = "1 day",
date_labels = "%d-%b") +
theme(axis.text.x=element_text(angle=60, hjust=1),
axis.title.y = element_text(color = "red",
size=13),
axis.text.y = element_text(color = "red"),
axis.title.y.right = element_text(color = "blue",
size=13),
axis.text.y.right = element_text(color = "blue"),
strip.text.x = element_blank(),
aspect.ratio=1/10) +
geom_line(aes(x = UTC,
y = Water_Level*5),
col = "blue") +
scale_y_continuous(sec.axis = sec_axis(trans = ~./5,
name="Water Level, mm"))+
facet_wrap(~panel, scales = 'free', nrow = n)
CH4_TimeLine
#Export the plot to PNG file
ggsave("1_CH4_WL.png", CH4_TimeLine, path = "4_Data/OutputData/Plots", width = 10, height = 5)
# for automatic panel
# TotalData_CH4_WL <- TotalData_CH4_WL[TotalData_CH4_WL$UTC <= "2021-08-10 23:59:00"] %>% mutate(panel = as.integer(0))
# TotalData_CH4_WL <- TotalData_CH4_WL[TotalData_CH4_WL$UTC >= "2021-08-11 00:00:00" & TotalData_CH4_WL$UTC <= "2021-08-18 23:59:00"] %>% mutate(panel = as.integer(1))
# TotalData_CH4_WL <- TotalData_CH4_WL[TotalData_CH4_WL$UTC >= "2021-08-19 00:00:00" & TotalData_CH4_WL$UTC <= "2021-08-28 23:59:00"] %>% mutate(panel = as.integer(2))
# TotalData_CH4_WL <- TotalData_CH4_WL[TotalData_CH4_WL$UTC >= "2021-08-29 00:00:00"] %>% mutate(panel = as.integer(3))
# TotalData_CH4_WL <- TotalData_CH4_WL %>% mutate(panel = as.integer(((row_number()-1)/nrow(TotalData_CH4_WL))*n))
#
# Plot CH4, Waterlavel & Time
CH4_TimeLine <- ggplot(TotalData_CH4_WL) +
geom_line(aes(x = UTC,
y = X.CH4.),
col = "red") +
labs(x = "Fill Time [UTC]",
y ="CH4 Concentration [ppb]",
title = "CH4 Concentration & Elbe Waterlevel vs. Time") +
scale_x_datetime(date_breaks = "1 day",
date_labels = "%d-%b") +
theme(axis.text.x=element_text(angle=60, hjust=1),
axis.title.y = element_text(color = "red",
size=13),
axis.text.y = element_text(color = "red"),
axis.title.y.right = element_text(color = "blue",
size=13),
axis.text.y.right = element_text(color = "blue"),
strip.text.x = element_blank(),
aspect.ratio=1/13) +
geom_line(aes(x = UTC,
y = Water_Level*5),
col = "blue") +
scale_y_continuous(sec.axis = sec_axis(trans = ~./5,
name="Water Level, mm"))+
facet_wrap(~panel, scales = 'free', nrow = n)
CH4_TimeLine
#Export the plot to PNG file
ggsave("1_CH4_WL.png", CH4_TimeLine, path = "4_Data/OutputData/Plots", width = 10, height = 5)
# for automatic panel
# TotalData_CH4_WL <- TotalData_CH4_WL[TotalData_CH4_WL$UTC <= "2021-08-10 23:59:00"] %>% mutate(panel = as.integer(0))
# TotalData_CH4_WL <- TotalData_CH4_WL[TotalData_CH4_WL$UTC >= "2021-08-11 00:00:00" & TotalData_CH4_WL$UTC <= "2021-08-18 23:59:00"] %>% mutate(panel = as.integer(1))
# TotalData_CH4_WL <- TotalData_CH4_WL[TotalData_CH4_WL$UTC >= "2021-08-19 00:00:00" & TotalData_CH4_WL$UTC <= "2021-08-28 23:59:00"] %>% mutate(panel = as.integer(2))
# TotalData_CH4_WL <- TotalData_CH4_WL[TotalData_CH4_WL$UTC >= "2021-08-29 00:00:00"] %>% mutate(panel = as.integer(3))
# TotalData_CH4_WL <- TotalData_CH4_WL %>% mutate(panel = as.integer(((row_number()-1)/nrow(TotalData_CH4_WL))*n))
#
# Plot CH4, Waterlavel & Time
CH4_TimeLine <- ggplot(TotalData_CH4_WL) +
geom_line(aes(x = UTC,
y = X.CH4.),
col = "red") +
labs(x = "Fill Time [UTC]",
y ="CH4 Concentration [ppb]",
title = "CH4 Concentration & Elbe Waterlevel vs. Time") +
scale_x_datetime(date_breaks = "1 day",
date_labels = "%d-%b") +
theme(axis.text.x=element_text(angle=60, hjust=1),
axis.title.y = element_text(color = "red",
size=13),
axis.text.y = element_text(color = "red"),
axis.title.y.right = element_text(color = "blue",
size=13),
axis.text.y.right = element_text(color = "blue"),
strip.text.x = element_blank(),
aspect.ratio=1/15) +
geom_line(aes(x = UTC,
y = Water_Level*5),
col = "blue") +
scale_y_continuous(sec.axis = sec_axis(trans = ~./5,
name="Water Level, mm"))+
facet_wrap(~panel, scales = 'free', nrow = n)
CH4_TimeLine
#Export the plot to PNG file
ggsave("1_CH4_WL.png", CH4_TimeLine, path = "4_Data/OutputData/Plots", width = 10, height = 5)
# for automatic panel
# TotalData_CH4_WL <- TotalData_CH4_WL[TotalData_CH4_WL$UTC <= "2021-08-10 23:59:00"] %>% mutate(panel = as.integer(0))
# TotalData_CH4_WL <- TotalData_CH4_WL[TotalData_CH4_WL$UTC >= "2021-08-11 00:00:00" & TotalData_CH4_WL$UTC <= "2021-08-18 23:59:00"] %>% mutate(panel = as.integer(1))
# TotalData_CH4_WL <- TotalData_CH4_WL[TotalData_CH4_WL$UTC >= "2021-08-19 00:00:00" & TotalData_CH4_WL$UTC <= "2021-08-28 23:59:00"] %>% mutate(panel = as.integer(2))
# TotalData_CH4_WL <- TotalData_CH4_WL[TotalData_CH4_WL$UTC >= "2021-08-29 00:00:00"] %>% mutate(panel = as.integer(3))
# TotalData_CH4_WL <- TotalData_CH4_WL %>% mutate(panel = as.integer(((row_number()-1)/nrow(TotalData_CH4_WL))*n))
#
# Plot CH4, Waterlavel & Time
CH4_TimeLine <- ggplot(TotalData_CH4_WL) +
geom_line(aes(x = UTC,
y = X.CH4.),
col = "red") +
labs(x = "Fill Time [UTC]",
y ="CH4 Concentration [ppb]",
title = "CH4 Concentration & Elbe Waterlevel vs. Time") +
scale_x_datetime(date_breaks = "1 day",
date_labels = "%d-%b") +
theme(axis.text.x=element_text(angle=60, hjust=1),
axis.title.y = element_text(color = "red",
size=13),
axis.text.y = element_text(color = "red"),
axis.title.y.right = element_text(color = "blue",
size=13),
axis.text.y.right = element_text(color = "blue"),
strip.text.x = element_blank(),
aspect.ratio=1/14) +
geom_line(aes(x = UTC,
y = Water_Level*5),
col = "blue") +
scale_y_continuous(sec.axis = sec_axis(trans = ~./5,
name="Water Level, mm"))+
facet_wrap(~panel, scales = 'free', nrow = n)
CH4_TimeLine
#Export the plot to PNG file
ggsave("1_CH4_WL.png", CH4_TimeLine, path = "4_Data/OutputData/Plots", width = 10, height = 5)
source("3_Scripts/Functions.R")
Compare_Timeline(TotalData, 4)
source("3_Scripts/Functions.R")
Compare_Timeline(TotalData, 4)
source("3_Scripts/Functions.R")
Compare_Timeline(TotalData, 4)
source("3_Scripts/Functions.R")
Compare_Timeline(TotalData, 4)
source("3_Scripts/Functions.R")
Compare_Timeline(TotalData, 4)
source("3_Scripts/Functions.R")
Compare_Timeline(TotalData, 4)
source("3_Scripts/Functions.R")
Compare_Timeline(TotalData, 4)
source("3_Scripts/Functions.R")
Compare_Timeline(TotalData, 4)
source("3_Scripts/Functions.R")
Compare_Timeline(TotalData, 4)
source("~/Documents/Uni/MasterThesis/4_Scrips_and_Data/3_Scripts/Plotting_With_Compleate_CSV_File_Data.R", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
Wind_TimeLine <- ggplot(TotalData_Wind) +
geom_line(aes(x = UTC,
y = Wind_Direction),
colour = TotalData_Wind$Wind_Speed) +
labs(x = "Fill Time [UTC]",
y ="Wind Direction, °",
title = "Wind Speed & Wind Direction vs. Time") +
scale_x_datetime(date_breaks = "1 day",
date_labels = "%d-%b") +
theme(axis.text.x=element_text(angle=60, hjust=1),
axis.title.y = element_text(color = "black",
size=13),
axis.text.y = element_text(color = "black"),
axis.title.y.right = element_text(color = "purple",
size=13),
axis.text.y.right = element_text(color = "purple"),
strip.text.x = element_blank()) +
geom_line(aes(x = UTC,
y = Wind_Speed*70),
col = "purple") +
scale_y_continuous(sec.axis = sec_axis(trans = ~./70,
name="Wind Speed, m/s"))+
facet_wrap(~panel, scales = 'free', nrow = n)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/Documents/Uni/MasterThesis/4_Scrips_and_Data/3_Scripts/Plotting_With_Compleate_CSV_File_Data.R", echo=TRUE)
source("~/Documents/Uni/MasterThesis/4_Scrips_and_Data/3_Scripts/Plotting_With_Compleate_CSV_File_Data.R", echo=TRUE)
par(mar = c(1.5, 4, 4, 4) + 0.3, mfrow=c(2,1))  # Leave space for z axis
# first plot
plot(TotalData$UTC, TotalData$Wind_Direction,
main = "Wind Direction & Speed (DWD)/CH4 Concentation Vs. Time",
type = "p",
pch='.',
cex = 5,
xlab = "Date/Time UTC",
ylab = "Wind Direction, °",
xlim = c(as.POSIXct(StartTime, format = "%Y-%m-%d %H:%M:%S"),as.POSIXct(FinishTime, format = "%Y-%m-%d %H:%M:%S")))
par(new = TRUE)
plot(TotalData$UTC, TotalData$X.CH4.,
type = "p",
col="red",
axes = FALSE,
bty = "n",
xlab = "",
ylab = "",
xlim = c(as.POSIXct(StartTime, format = "%Y-%m-%d %H:%M:%S"),as.POSIXct(FinishTime, format = "%Y-%m-%d %H:%M:%S")))
axis(side=4,
col.axis="red",
col="red")
mtext("CH4 Concentration",
col="red",
side=4,
line=3)
par(mar = c(4, 4, 0, 4) + 0.3)  # Leave space for z axis
# first plot
plot(TotalData$UTC, TotalData$Wind_Speed,
type = "p",
pch='.',
cex = 5,
xlab = "Date/Time UTC",
ylab = "Wind Speed, m/s",
xlim = c(as.POSIXct(StartTime, format = "%Y-%m-%d %H:%M:%S"),as.POSIXct(FinishTime, format = "%Y-%m-%d %H:%M:%S")))
par(new = TRUE)
plot(TotalData$UTC, TotalData$X.CH4.,
type = "p",
col="red",
axes = FALSE,
bty = "n",
xlab = "",
ylab = "",
xlim = c(as.POSIXct(StartTime, format = "%Y-%m-%d %H:%M:%S"),as.POSIXct(FinishTime, format = "%Y-%m-%d %H:%M:%S")))
axis(side=4,
col.axis="red",
col="red")
mtext("CH4 Concentration",
col="red",
side=4,
line=3)
par(mfrow=c(1,1))
