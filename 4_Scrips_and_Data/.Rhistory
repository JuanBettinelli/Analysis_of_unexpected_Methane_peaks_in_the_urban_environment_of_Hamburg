CH4_TimeLine
CH4_TimeLine <- ggplot(TotalData_CH4_BLH) +
geom_line(aes(x = UTC,
y = LIDAR_BLH),
col = "red") +
labs(x = "Fill Time [UTC]",
y =expression("CH"[4]*" concentration [ppb]"),
title = "Methane concentration & Elbe water level vs. time") +
scale_x_datetime(date_breaks = "1 day",
date_labels = "%d-%b",
limits = c(as.POSIXct('2021-08-01 00:00:00', format = "%Y-%m-%d %H:%M:%S", tz ="utc"),
as.POSIXct('2021-08-18 00:00:00', format = "%Y-%m-%d %H:%M:%S", tz ="utc")))
CH4_TimeLine
CH4_TimeLine <- ggplot(TotalData_CH4_BLH) +
geom_line(aes(x = UTC,
y = ERA5_BLH),
col = "red") +
labs(x = "Fill Time [UTC]",
y =expression("CH"[4]*" concentration [ppb]"),
title = "Methane concentration & Elbe water level vs. time") +
scale_x_datetime(date_breaks = "1 day",
date_labels = "%d-%b",
limits = c(as.POSIXct('2021-08-01 00:00:00', format = "%Y-%m-%d %H:%M:%S", tz ="utc"),
as.POSIXct('2021-08-18 00:00:00', format = "%Y-%m-%d %H:%M:%S", tz ="utc")))
CH4_TimeLine
CH4_TimeLine <- ggplot(TotalData_CH4_BLH) +
geom_line(aes(x = UTC,
y = ERA5_BLH),
col = "red") +
labs(x = "Fill Time [UTC]",
y =expression("CH"[4]*" concentration [ppb]"),
title = "Methane concentration & Elbe water level vs. time") +
scale_x_datetime(date_breaks = "1 day",
date_labels = "%d-%b",
limits = c(as.POSIXct('2021-08-01 00:00:00', format = "%Y-%m-%d %H:%M:%S", tz ="utc"),
as.POSIXct('2021-08-18 00:00:00', format = "%Y-%m-%d %H:%M:%S", tz ="utc")))
CH4_TimeLine
View(TotalData_CH4_BLH)
# Filter Data frame, selcts only datapoints where "UTC", "X.CH4." values exist in the dataframe
TotalData_CH4_BLH <- TotalData[complete.cases(TotalData[ , c("UTC", "ERA5_BLH")]),]
CH4_TimeLine <- ggplot(TotalData_CH4_BLH) +
geom_line(aes(x = UTC,
y = ERA5_BLH),
col = "red") +
labs(x = "Fill Time [UTC]",
y =expression("CH"[4]*" concentration [ppb]"),
title = "Methane concentration & Elbe water level vs. time") +
scale_x_datetime(date_breaks = "1 day",
date_labels = "%d-%b",
limits = c(as.POSIXct('2021-08-01 00:00:00', format = "%Y-%m-%d %H:%M:%S", tz ="utc"),
as.POSIXct('2021-08-18 00:00:00', format = "%Y-%m-%d %H:%M:%S", tz ="utc")))
CH4_TimeLine
CH4_TimeLine <- ggplot(TotalData_CH4_BLH) +
geom_line(aes(x = UTC,
y = ERA5_BLH),
col = "red") +
labs(x = "Fill Time [UTC]",
y =expression("CH"[4]*" concentration [ppb]"),
title = "Methane concentration & Elbe water level vs. time") +
scale_x_datetime(date_breaks = "1 day",
date_labels = "%d-%b",
limits = c(as.POSIXct('2021-08-01 00:00:00', format = "%Y-%m-%d %H:%M:%S", tz ="utc"),
as.POSIXct('2021-09-18 00:00:00', format = "%Y-%m-%d %H:%M:%S", tz ="utc")))
CH4_TimeLine
CH4_TimeLine <- ggplot(TotalData_CH4_BLH) +
geom_line(aes(x = UTC,
y = ERA5_BLH),
col = "red") +
labs(x = "Fill Time [UTC]",
y =expression("CH"[4]*" concentration [ppb]"),
title = "Methane concentration & Elbe water level vs. time") +
scale_x_datetime(date_breaks = "1 day",
date_labels = "%d-%b",
limits = c(as.POSIXct('2021-08-01 00:00:00', format = "%Y-%m-%d %H:%M:%S", tz ="utc"),
as.POSIXct('2021-09-01 00:00:00', format = "%Y-%m-%d %H:%M:%S", tz ="utc")))
CH4_TimeLine
CH4_TimeLine <- ggplot(TotalData_CH4_BLH) +
geom_line(aes(x = UTC,
y = ERA5_BLH),
col = "red") +
labs(x = "Fill Time [UTC]",
y =expression("CH"[4]*" concentration [ppb]"),
title = "Methane concentration & Elbe water level vs. time") +
scale_x_datetime(date_breaks = "1 day",
date_labels = "%d-%b",
limits = c(as.POSIXct('2021-08-01 00:00:00', format = "%Y-%m-%d %H:%M:%S", tz ="utc"),
as.POSIXct('2021-09-10 00:00:00', format = "%Y-%m-%d %H:%M:%S", tz ="utc")))
CH4_TimeLine
CH4_TimeLine <- ggplot(TotalData_CH4_BLH) +
geom_line(aes(x = UTC,
y = ERA5_BLH),
col = "red") +
labs(x = "Fill Time [UTC]",
y =expression("CH"[4]*" concentration [ppb]"),
title = "Methane concentration & Elbe water level vs. time") +
scale_x_datetime(date_breaks = "1 day",
date_labels = "%d-%b",
limits = c(as.POSIXct('2021-08-01 00:00:00', format = "%Y-%m-%d %H:%M:%S", tz ="utc"),
as.POSIXct('2021-09-14 00:00:00', format = "%Y-%m-%d %H:%M:%S", tz ="utc")))
CH4_TimeLine
CH4_TimeLine <- ggplot(TotalData_CH4_BLH) +
geom_line(aes(x = UTC,
y = ERA5_BLH),
col = "red") +
labs(x = "Fill Time [UTC]",
y =expression("CH"[4]*" concentration [ppb]"),
title = "Methane concentration & Elbe water level vs. time") +
scale_x_datetime(date_breaks = "1 day",
date_labels = "%d-%b",
limits = c(as.POSIXct('2021-08-01 00:00:00', format = "%Y-%m-%d %H:%M:%S", tz ="utc"),
as.POSIXct('2021-09-10 00:00:00', format = "%Y-%m-%d %H:%M:%S", tz ="utc")))
CH4_TimeLine
# Plot CH4, BoundaryLayer Vs Timex
# Plot CH4, BoundaryLayer Vs Timex
CH4_TimeLine <- ggplot(TotalData_CH4_BLH) +
geom_line(aes(x = UTC,
y = X.CH4.),
col = "red") +
labs(x = "Fill Time [UTC]",
y =expression("CH"[4]*" concentration [ppb]"),
title = "Methane concentration & Elbe water level vs. time") +
scale_x_datetime(date_breaks = "1 day",
date_labels = "%d-%b",
limits = c(as.POSIXct('2021-08-01 00:00:00',
format = "%Y-%m-%d %H:%M:%S",
tz ="utc"), as.POSIXct('2021-08-18 00:00:00',
format = "%Y-%m-%d %H:%M:%S",
tz ="utc"))) +
theme(axis.text.x=element_text(angle=60, hjust=1),
axis.title.y = element_text(color = "red",
size=13),
axis.text.y = element_text(color = "red"),
axis.title.y.right = element_text(color = "blue",
size=13),
axis.text.y.right = element_text(color = "blue"),
strip.text.x = element_blank()) +
geom_line(aes(x = UTC,
y = ERA5_BLH*5),
col = "blue") +
scale_y_continuous(sec.axis = sec_axis(trans = ~./5,
name="Water Level, mm")) #+
#  facet_wrap(~panel, scales = 'free', nrow = m)
CH4_TimeLine
#  facet_wrap(~panel, scales = 'free', nrow = m)
CH4_TimeLine
# Plot CH4, BoundaryLayer Vs Timex
CH4_TimeLine <- ggplot(TotalData_CH4_BLH) +
geom_line(aes(x = UTC,
y = X.CH4.),
col = "red") +
labs(x = "Fill Time [UTC]",
y =expression("CH"[4]*" concentration [ppb]"),
title = "Methane concentration & Elbe water level vs. time") +
scale_x_datetime(date_breaks = "1 day",
date_labels = "%d-%b",
limits = c(as.POSIXct('2021-08-01 00:00:00',
format = "%Y-%m-%d %H:%M:%S",
tz ="utc"), as.POSIXct('2021-08-18 00:00:00',
format = "%Y-%m-%d %H:%M:%S",
tz ="utc"))) +
theme(axis.text.x=element_text(angle=60, hjust=1),
axis.title.y = element_text(color = "red",
size=13),
axis.text.y = element_text(color = "red"),
axis.title.y.right = element_text(color = "blue",
size=13),
axis.text.y.right = element_text(color = "blue"),
strip.text.x = element_blank()) +
geom_line(aes(x = UTC,
y = ERA5_BLH*5),
col = "blue") +
scale_y_continuous(sec.axis = sec_axis(trans = ~./5,
name="Water Level, mm")) #+
#  facet_wrap(~panel, scales = 'free', nrow = m)
CH4_TimeLine
library(pacman)
library(lubridate)
library(readr)
library(plyr)
library(tidyverse)
library(ggplot2)
library(hexbin)
library(gridExtra)
library(reshape2)
library(openair)
library(cowplot)
library(patchwork)
library(dplyr)
library(GGally)
library(ggthemes)
library(ggvis)
library(httr)
library(plotly)
library(rio)
library(rmarkdown)
library(shiny)
library(stringr)
library(tidyr)
library(pracma)
#Set Working Directory, Set it into the folder "MasterThesis/4_Scrips_and_Data" to automatically access the data.
setwd("/Users/juanbettinelli/Documents/Uni/MasterThesis/4_Scrips_and_Data")
source("3_Scripts/Functions.R")
source("3_Scripts/CH4_Transportmodel.R")
StartTime <- as.POSIXct('2021-08-01 22:03:00',
format = "%Y-%m-%d %H:%M:%S",
tz ="utc")
# Start Time: 2021-08-01 22:03:00
FinishTime <- as.POSIXct('2022-03-29 00:00:00',
format = "%Y-%m-%d %H:%M:%S",
tz ="utc")
# Total Timeseries: 2022-03-29 00:00:00
# Hamburg Campagne Timeseries: 2021-09-06 00:00:00
# Hamburg Campaine #2: 2021-09-17 10:21:00
########### Read the CSV File #############
TotalData <- import("4_Data/OutputData/CombineMeteorologicalData.csv")
TotalData$UTC <- as.POSIXct(as.character(TotalData$UTC),
format = "%Y-%m-%d %H:%M:%S",
tz = "UTC")
TotalData$X.CH4. <- as.numeric(TotalData$X.CH4.)
TotalData <- filter(TotalData, TotalData$UTC > StartTime & TotalData$UTC < FinishTime, .preserve = FALSE)
TotalData$UTC <- as.POSIXct(TotalData$UTC,
format = "%d-%m-%Y %H:%M:%S",
tz = "utc")
TotalData$Direction[TotalData$Direction > 361] <- NA
TotalData$Speed[TotalData$Speed > 99] <- NA
n <- 0
# Filter Data frame, selcts only datapoints where "UTC", "X.CH4." values exist in the dataframe
TotalData_CH4_BLH <- TotalData[complete.cases(TotalData[ , c("UTC", "X.CH4.")]),]
# Plot CH4, BoundaryLayer Vs Timex
CH4_TimeLine <- ggplot(TotalData_CH4_BLH) +
geom_line(aes(x = UTC,
y = X.CH4.),
col = "red") +
labs(x = "Fill Time [UTC]",
y =expression("CH"[4]*" concentration [ppb]"),
title = "Methane concentration & Elbe water level vs. time") +
scale_x_datetime(date_breaks = "1 day",
date_labels = "%d-%b",
limits = c(as.POSIXct('2021-08-01 00:00:00',
format = "%Y-%m-%d %H:%M:%S",
tz ="utc"), as.POSIXct('2021-08-18 00:00:00',
format = "%Y-%m-%d %H:%M:%S",
tz ="utc"))) +
theme(axis.text.x=element_text(angle=60, hjust=1),
axis.title.y = element_text(color = "red",
size=13),
axis.text.y = element_text(color = "red"),
axis.title.y.right = element_text(color = "blue",
size=13),
axis.text.y.right = element_text(color = "blue"),
strip.text.x = element_blank()) +
geom_line(aes(x = UTC,
y = ERA5_BLH*5),
col = "blue") +
scale_y_continuous(sec.axis = sec_axis(trans = ~./5,
name="Water Level, mm")) #+
#  facet_wrap(~panel, scales = 'free', nrow = m)
CH4_TimeLine
TotalData_CH4 <- TotalData[complete.cases(TotalData[ , "X.CH4."]),]
TotalData_CH4 <- TotalData_CH4[,c("UTC", "X.CH4.", "Water_Level")]
WL_CH4_Data <- melt(TotalData_CH4, id.var="UTC")
TotalData_CH4 <- TotalData[complete.cases(TotalData[ , "X.CH4."]),]
TotalData_CH4 <- TotalData_CH4[,c("UTC", "X.CH4.", "ERA5_BLH")]
WL_CH4_Data <- melt(TotalData_CH4, id.var="UTC")
# png(file="4_Data/OutputData/Plots/4_Basic_Plot_CH4_Wl.png",
#     width=600, height=350)
par(mar = c(5, 4, 4, 4) + 0.3, mfrow=c(1,1))  # Leave space for z axis
plot(TotalData_CH4$UTC, TotalData_CH4$ERA5_BLH,
type = "l",
cex = 2,
xlab = "Date/Time UTC",
ylab = "Elbe Waterlevel, mm",
xlim = c(StartTime, FinishTime))
par(new = TRUE)
plot(TotalData_CH4$UTC, TotalData_CH4$X.CH4.,
main = "WaterLevel(WSV)/CH4 Concentation Vs. Time",
type = "l",
cex = 2,
col="red",
axes = FALSE,
bty = "n",
xlab = "",
ylab = "",
xlim = c(c(StartTime, FinishTime)))
axis(side=4,
col.axis="red",
col="red")
mtext("CH4 Concentration",
col="red",
side=4,
line=3)
View(TotalData_CH4)
View(TotalData_CH4_BLH)
View(TotalData_CH4)
FinishTime <- as.POSIXct('2021-09-10 00:00:00',
format = "%Y-%m-%d %H:%M:%S",
tz ="utc")
TotalData_CH4 <- TotalData[complete.cases(TotalData[ , "X.CH4."]),]
TotalData_CH4 <- TotalData_CH4[,c("UTC", "X.CH4.", "ERA5_BLH")]
WL_CH4_Data <- melt(TotalData_CH4, id.var="UTC")
# png(file="4_Data/OutputData/Plots/4_Basic_Plot_CH4_Wl.png",
#     width=600, height=350)
par(mar = c(5, 4, 4, 4) + 0.3, mfrow=c(1,1))  # Leave space for z axis
plot(TotalData_CH4$UTC, TotalData_CH4$ERA5_BLH,
type = "l",
cex = 2,
xlab = "Date/Time UTC",
ylab = "Elbe Waterlevel, mm",
xlim = c(StartTime, FinishTime))
# png(file="4_Data/OutputData/Plots/4_Basic_Plot_CH4_Wl.png",
#     width=600, height=350)
par(mar = c(5, 4, 4, 4) + 0.3, mfrow=c(1,1))  # Leave space for z axis
plot(TotalData_CH4$UTC, TotalData_CH4$ERA5_BLH,
type = "p",
cex = 2,
xlab = "Date/Time UTC",
ylab = "Elbe Waterlevel, mm",
xlim = c(StartTime, FinishTime))
# png(file="4_Data/OutputData/Plots/4_Basic_Plot_CH4_Wl.png",
#     width=600, height=350)
par(mar = c(5, 4, 4, 4) + 0.3, mfrow=c(1,1))  # Leave space for z axis
plot(TotalData_CH4_BLH$UTC, TotalData_CH4_BLH$ERA5_BLH,
type = "l",
cex = 2,
xlab = "Date/Time UTC",
ylab = "Elbe Waterlevel, mm",
xlim = c(StartTime, FinishTime))
# Filter Data frame, selcts only datapoints where "UTC", "X.CH4." values exist in the dataframe
TotalData_CH4_BLH <- TotalData[complete.cases(TotalData[ , c("UTC", "ERA5_BLH")]),]
# png(file="4_Data/OutputData/Plots/4_Basic_Plot_CH4_Wl.png",
#     width=600, height=350)
par(mar = c(5, 4, 4, 4) + 0.3, mfrow=c(1,1))  # Leave space for z axis
plot(TotalData_CH4_BLH$UTC, TotalData_CH4_BLH$ERA5_BLH,
type = "l",
cex = 2,
xlab = "Date/Time UTC",
ylab = "Elbe Waterlevel, mm",
xlim = c(StartTime, FinishTime))
par(new = TRUE)
plot(TotalData_CH4$UTC, TotalData_CH4$X.CH4.,
main = "WaterLevel(WSV)/CH4 Concentation Vs. Time",
type = "l",
cex = 2,
col="red",
axes = FALSE,
bty = "n",
xlab = "",
ylab = "",
xlim = c(c(StartTime, FinishTime)))
axis(side=4,
col.axis="red",
col="red")
mtext("CH4 Concentration",
col="red",
side=4,
line=3)
#     width=600, height=350)
par(mar = c(5, 4, 4, 4) + 0.3, mfrow=c(1,1))  # Leave space for z axis
plot(TotalData_CH4_BLH$UTC, TotalData_CH4_BLH$ERA5_BLH,
type = "l",
cex = 2,
xlab = "Date/Time UTC",
ylab = "Boundary Layer Hight, m",
xlim = c(StartTime, FinishTime))
par(new = TRUE)
plot(TotalData_CH4$UTC, TotalData_CH4$X.CH4.,
main = "ERA5 Boundary Layer Hight/CH4 Concentation Vs. Time",
type = "l",
cex = 2,
col="red",
axes = FALSE,
bty = "n",
xlab = "",
ylab = "",
xlim = c(c(StartTime, FinishTime)))
axis(side=4,
col.axis="red",
col="red")
mtext("CH4 Concentration",
col="red",
side=4,
line=3)
par(mar = c(5, 4, 4, 4) + 0.3, mfrow=c(1,1))  # Leave space for z axis
plot(TotalData_CH4_BLH$UTC, TotalData_CH4_BLH$ERA5_BLH,
type = "l",
cex = 4,
xlab = "Date/Time UTC",
ylab = "Boundary Layer Hight, m",
xlim = c(StartTime, FinishTime))
par(new = TRUE)
plot(TotalData_CH4$UTC, TotalData_CH4$X.CH4.,
main = "ERA5 Boundary Layer Hight/CH4 Concentation Vs. Time",
type = "l",
cex = 2,
col="red",
axes = FALSE,
bty = "n",
xlab = "",
ylab = "",
xlim = c(c(StartTime, FinishTime)))
axis(side=4,
col.axis="red",
col="red")
mtext("CH4 Concentration",
col="red",
side=4,
line=3)
# dev.off()
source("~/Documents/Uni/MasterThesis/4_Scrips_and_Data/3_Scripts/BoundaryLayer.R", echo=TRUE)
source("~/Documents/Uni/MasterThesis/4_Scrips_and_Data/3_Scripts/BoundaryLayer.R", echo=TRUE)
source("~/Documents/Uni/MasterThesis/4_Scrips_and_Data/3_Scripts/BoundaryLayer.R", echo=TRUE)
source("~/Documents/Uni/MasterThesis/4_Scrips_and_Data/3_Scripts/BoundaryLayer.R", echo=TRUE)
source("~/Documents/Uni/MasterThesis/4_Scrips_and_Data/3_Scripts/BoundaryLayer.R", echo=TRUE)
library(pacman)
library(lubridate)
library(readr)
library(plyr)
library(tidyverse)
library(ggplot2)
library(hexbin)
library(gridExtra)
library(reshape2)
library(openair)
library(cowplot)
library(patchwork)
library(dplyr)
library(GGally)
library(ggthemes)
library(ggvis)
library(httr)
library(plotly)
library(rio)
library(rmarkdown)
library(shiny)
library(stringr)
library(tidyr)
library(pracma)
#Set Working Directory, Set it into the folder "MasterThesis/4_Scrips_and_Data" to automatically access the data.
setwd("/Users/juanbettinelli/Documents/Uni/MasterThesis/4_Scrips_and_Data")
source("3_Scripts/Functions.R")
source("3_Scripts/CH4_Transportmodel.R")
StartTime <- as.POSIXct('2021-08-01 22:03:00',
format = "%Y-%m-%d %H:%M:%S",
tz ="utc")
# Start Time: 2021-08-01 22:03:00
FinishTime <- as.POSIXct('2022-03-29 00:00:00',
format = "%Y-%m-%d %H:%M:%S",
tz ="utc")
# Total Timeseries: 2022-03-29 00:00:00
# Hamburg Campagne Timeseries: 2021-09-06 00:00:00
# Hamburg Campaine #2: 2021-09-17 10:21:00
########### Read the CSV File #############
TotalData <- import("4_Data/OutputData/CombineMeteorologicalData.csv")
TotalData$UTC <- as.POSIXct(as.character(TotalData$UTC),
format = "%Y-%m-%d %H:%M:%S",
tz = "UTC")
TotalData$X.CH4. <- as.numeric(TotalData$X.CH4.)
TotalData <- filter(TotalData, TotalData$UTC > StartTime & TotalData$UTC < FinishTime, .preserve = FALSE)
TotalData$UTC <- as.POSIXct(TotalData$UTC,
format = "%d-%m-%Y %H:%M:%S",
tz = "utc")
TotalData$Direction[TotalData$Direction > 361] <- NA
TotalData$Speed[TotalData$Speed > 99] <- NA
source("3_Scripts/Low_WL_Time.R")
source("3_Scripts/Low_WL_Dist.R")
source("Low_WL_Dist_Transportmodel.R")
source("~/Documents/Uni/MasterThesis/4_Scrips_and_Data/3_Scripts/Low_WL_Time.R", echo=TRUE)
source("~/Documents/Uni/MasterThesis/4_Scrips_and_Data/3_Scripts/Low_WL_Dist.R", echo=TRUE)
source("~/Documents/Uni/MasterThesis/4_Scrips_and_Data/3_Scripts/Low_WL_Dist_Transportmodel.R", echo=TRUE)
source("3_Scripts/Low_WL_Time.R")
source("3_Scripts/Low_WL_Dist.R")
source("Low_WL_Dist_Transportmodel.R")
source("3_Scripts/Low_WL_Dist_Transportmodel.R")
######## Finding the Peaks, The Average Meteorological Data during Peak, Saving csv File #########
CH4_Peak_Finder(TotalData, TRUE)
######### Wind Rose Plots (Plot 9) ##########
WindRose_Plots(TotalData)
### Comparison Plots (Plots 1, 2, 3 & 5) #####
Compare_Timeline(TotalData, 4) # Use 0 for fixed Panels, any integer for rest
Compare_Timeline2(TotalData, 10) # Use 0 for fixed Panels, any integer for rest
Compare_Timeline_Basic(TotalData) # Total Timeline
########### 4 Plot CH4 Concentration Timeseries (Plot 4)##############
CH4_TimeLine(TotalData, StartTime, FinishTime, 10, FALSE) #CH4_TimeLine(ImputDataFrame = , StartTime = , FinishTime =, MumberOfPanels = (0=FixedPanelForPaper), TURE = OnePlotMultiplePanels FALSE = MultipePlotsOnePanel)
CH4_TimeLine_No_Peaks(TotalData, StartTime, FinishTime, 10, FALSE) #CH4_TimeLine(ImputDataFrame = , StartTime = , FinishTime =, MumberOfPanels = (0=FixedPanelForPaper), TURE = OnePlotMultiplePanels FALSE = MultipePlotsOnePanel)
CH4_TimeLine_total(TotalData, StartTime , FinishTime )
######## Plot Wind Direction (DWD)/Speed/CH4 (Plot 6.1) #############
Basic_Wind_DWD_CH4(TotalData, StartTime, FinishTime)
######## Plot CH4/Waterlevel/ Winddierction (DWD) (Plot 6.2) #############
Basic_Wind_D_WL_CH4(TotalData, StartTime, FinishTime)
######## Plot Wind Direction (Mast 110m)/Speed/CH4 (Plot 6.3) #############
Basic_Wind_110m_CH4(TotalData, StartTime, FinishTime)
######## Plot Wind Direction (Geomatikum)/CH4 (Plot 6.4) #############
Basic_Wind_Geomatikum_CH4(TotalData, StartTime, FinishTime)
######## Plot CH4/Water level/ Wind direction, Split into 10 Day intervals (Plot 7.2) #############
Basic_CH4_WaterLevel_Wind_Direction(TotalData, StartTime, FinishTime)
######## Plot CH4/Water level/ Wind Speed, Split into 10 Day intervals (Plot 7.1) #############
Basic_CH4_WaterLevel_Wind_Speed(TotalData, StartTime, FinishTime)
######## Plot Rain/CH4 (Plot 8.3) #############
# Basic_Rain_CH4(TotalData, StartTime, FinishTime)
Rain_CH4(TotalData, 4)
######## Plot Temp/CH4 (Plot 8.2) #############
# Basic_Temp_CH4(TotalData, StartTime, FinishTime)
Temp_CH4(TotalData, 4)
######## Plot Humid/CH4 (Plot 8.1) #############
# Basic_Humidity_CH4(TotalData, StartTime, FinishTime)
Humidity_CH4(TotalData, 4)
######## Plot Radiation/CH4 (Plot 8.4) #############
Radiation_CH4(TotalData, 4)
######## Plot Pressure/CH4 (Plot 8.5) #############
Pressure_CH4(TotalData, 4)
######## Plot Dew/CH4 (Plot 8.6) #############
Dew_CH4(TotalData, 4)
