leg3 <- get_legend(p3)
# create a blank plot for legend alignment
blank_p <- plot_spacer() + theme_void()
# combine all legends
leg123 <- plot_grid(leg1, leg2, leg3,
align = "hv",
# axis = "tb",
nrow = 3
)
Total_Plot <- plot_grid(p0,
leg123,
nrow = 1,
align = "h",
axis = "t",
rel_widths = c(1, 0.3)
)
# Save and export the plot
ggsave("24_Dual_Isotopes_Total_MWK.png", Total_Plot, path = "4_Data/OutputData/Plots/24_EMPA", width = 12, height = 5.2)
# Plotting the results in a combine isotope plot to identify emmittor type.
# regions are highlightet for the emmition type
## Create Ploygon to be used in the Plots
# Thermogenic
TH <- data.frame(x = c(-75, -40, -15, -40, -60), y = c(-350, -100, -150, -300, -350))
# Abiotic
A <- data.frame(x = c(-50, -50, -25, -10, -10), y = c(-450, -300, -50, -50, -450))
p0 <- ggplot() +
geom_point(data=mean_Results, aes(x = c13C, y = c2H, color = "CF-IRMS MWK"), color = "red", size = 0,5)+
geom_errorbar(data=mean_Results, aes(x = c13C, xmin=c13C - c13C_sd, xmax= c13C - c13C_sd, y = c2H, ymin=c2H - c2H_sd, ymax=c2H + c2H_sd, colour="CF-IRMS MWK"), width=.02, alpha=0.5, color = "red") + #, position=pd
geom_errorbarh(data=mean_Results, aes(y = c2H, xmin=c13C - c13C_sd, xmax= c13C + c13C_sd, colour="CF-IRMS MWK"), width=.02, alpha=0.5, color = "red")+
geom_point(data=mean_Results, aes(x = c13C_EMPA, y = c2H_EMPA, color = "FLEXPART-COSMO MWK"), color = "blue", size = 0,5)+
geom_errorbar(data=mean_Results, aes(x = c13C_EMPA, ymin=c2H_EMPA-c2H_sd_EMPA, ymax=c2H_EMPA+c2H_sd_EMPA, colour="FLEXPART-COSMO MWK"), width=.02, alpha=0.5, color = "blue") + #, position=pd
geom_errorbarh(data=mean_Results, aes(y = c2H_EMPA, xmin=c13C_EMPA - c13C_sd_EMPA, xmax= c13C_EMPA + c13C_sd_EMPA, colour="CF-IRMS MWK"), width=.02, alpha=0.5, color = "blue")+
geom_point(data=mean_Results, aes(x = c13C_Total, y = c2H_Total, color = "CF-IRMS MWK"), color = "green", size = 0,5)+
geom_errorbar(data=mean_Results, aes(x = c13C_Total,  ymin=c2H_Total - c2H_sd_Total, ymax=c2H_Total + c2H_sd_Total, colour="CF-IRMS Total"), width=.02, alpha=0.5, color = "green") + #, position=pd
geom_errorbarh(data=mean_Results, aes(y = c2H_Total, xmin=c13C_Total - c13C_sd_Total, xmax= c13C_Total + c13C_sd_Total, colour="CF-IRMS Total"), width=.02, alpha=0.5, color = "green")+
geom_point(data=mean_Results, aes(x = c13C_EMPA_Total, y = c2H_EMPA_Total, color = "FLEXPART-COSMO Total"), color = "purple", size = 0,5)+
geom_errorbar(data=mean_Results, aes(x = c13C_EMPA_Total, ymin=c2H_EMPA_Total - c2H_sd_EMPA_Total, ymax=c2H_EMPA_Total + c2H_sd_EMPA_Total, colour="FLEXPART-COSMO Total"), width=.02, alpha=0.5, color = "purple") + #, position=pd
geom_errorbarh(data=mean_Results, aes(y = c2H_EMPA_Total, xmin=c13C_EMPA_Total - c13C_sd_EMPA_Total, xmax= c13C_EMPA_Total + c13C_sd_EMPA_Total, colour="FLEXPART-COSMO Total"), width=.02, alpha=0.5, color = "purple")+
geom_rect(aes(xmin=-66.4,xmax=-30.9,ymin=-199,ymax=-175), alpha=0.1, color = "red")+ #fossil fuels & nonindustrial combustion 12C 40.0 [66.4; 30.9], 2H 175 [199; 175]
geom_rect(aes(xmin=-70.6,xmax=-46.0,ymin=-361,ymax=-295),alpha=0.1, color = "green")+ # Agriculture 12C 68.0 [70.6; 46.0], 2H 319 [361; 295]
geom_rect(aes(xmin=-73.9,xmax=-45.5,ymin=-312,ymax=-293),alpha=0.1, color = "purple")+ # Waste 12C 55 [73.9; 45.5], 2H 293 [312; 293]
geom_rect(aes(xmin=-60,xmax=-9,ymin=-175,ymax=-81),alpha=0.1, color = "blue")+ # Other anthropogenic sources 12C 35.0 [60; 9], 2H 175 [175; 81]
geom_rect(aes(xmin=-88.9,xmax=-51.5,ymin=-358,ymax=-246),alpha=0.1, color = "black")+ # Natural wetlands 12C 69 [88.9; 51.5], 2H 330 [358; 246]
geom_rect(aes(xmin=-90,xmax=-50,ymin=-450,ymax=-250),alpha=0.1, fill="yellow")+ # MC: Microbial CO2 reduction
geom_rect(aes(xmin=-60,xmax=-90,ymin=-350,ymax=-125),alpha=0.5, fill="pink")+ # MF: Microbial Fermentation
geom_polygon(data = TH, aes(x, y), alpha=0.1,fill="#6B8E23")+ #TH: Thermogenic
geom_polygon(data = A, aes(x, y), alpha=0.4, fill="lightblue")+ # A: Abiotic
labs(x = expression(delta^13*'C in ‰'), y = expression(delta*'D in ‰'), title = "Dual isotope plots of the isotopic source signatures")+
# scale_color_gradient2(midpoint=180, low="blue", mid="red",
# high="blue", space ="Lab" )+
theme(legend.position = "none")
p0 <- ggplot() +
geom_point(data=mean_Results, aes(x = c13C, y = c2H, color = "CF-IRMS MWK"), color = "red", size = 0.5)+
geom_errorbar(data=mean_Results, aes(x = c13C, xmin=c13C - c13C_sd, xmax= c13C - c13C_sd, y = c2H, ymin=c2H - c2H_sd, ymax=c2H + c2H_sd, colour="CF-IRMS MWK"), width=.02, alpha=0.5, color = "red") + #, position=pd
geom_errorbarh(data=mean_Results, aes(y = c2H, xmin=c13C - c13C_sd, xmax= c13C + c13C_sd, colour="CF-IRMS MWK"), width=.02, alpha=0.5, color = "red")+
geom_point(data=mean_Results, aes(x = c13C_EMPA, y = c2H_EMPA, color = "FLEXPART-COSMO MWK"), color = "blue", size = 0.5)+
geom_errorbar(data=mean_Results, aes(x = c13C_EMPA, ymin=c2H_EMPA-c2H_sd_EMPA, ymax=c2H_EMPA+c2H_sd_EMPA, colour="FLEXPART-COSMO MWK"), width=.02, alpha=0.5, color = "blue") + #, position=pd
geom_errorbarh(data=mean_Results, aes(y = c2H_EMPA, xmin=c13C_EMPA - c13C_sd_EMPA, xmax= c13C_EMPA + c13C_sd_EMPA, colour="CF-IRMS MWK"), width=.02, alpha=0.5, color = "blue")+
geom_point(data=mean_Results, aes(x = c13C_Total, y = c2H_Total, color = "CF-IRMS MWK"), color = "green", size = 0.5)+
geom_errorbar(data=mean_Results, aes(x = c13C_Total,  ymin=c2H_Total - c2H_sd_Total, ymax=c2H_Total + c2H_sd_Total, colour="CF-IRMS Total"), width=.02, alpha=0.5, color = "green") + #, position=pd
geom_errorbarh(data=mean_Results, aes(y = c2H_Total, xmin=c13C_Total - c13C_sd_Total, xmax= c13C_Total + c13C_sd_Total, colour="CF-IRMS Total"), width=.02, alpha=0.5, color = "green")+
geom_point(data=mean_Results, aes(x = c13C_EMPA_Total, y = c2H_EMPA_Total, color = "FLEXPART-COSMO Total"), color = "purple", size = 0.5)+
geom_errorbar(data=mean_Results, aes(x = c13C_EMPA_Total, ymin=c2H_EMPA_Total - c2H_sd_EMPA_Total, ymax=c2H_EMPA_Total + c2H_sd_EMPA_Total, colour="FLEXPART-COSMO Total"), width=.02, alpha=0.5, color = "purple") + #, position=pd
geom_errorbarh(data=mean_Results, aes(y = c2H_EMPA_Total, xmin=c13C_EMPA_Total - c13C_sd_EMPA_Total, xmax= c13C_EMPA_Total + c13C_sd_EMPA_Total, colour="FLEXPART-COSMO Total"), width=.02, alpha=0.5, color = "purple")+
geom_rect(aes(xmin=-66.4,xmax=-30.9,ymin=-199,ymax=-175), alpha=0.1, color = "red")+ #fossil fuels & nonindustrial combustion 12C 40.0 [66.4; 30.9], 2H 175 [199; 175]
geom_rect(aes(xmin=-70.6,xmax=-46.0,ymin=-361,ymax=-295),alpha=0.1, color = "green")+ # Agriculture 12C 68.0 [70.6; 46.0], 2H 319 [361; 295]
geom_rect(aes(xmin=-73.9,xmax=-45.5,ymin=-312,ymax=-293),alpha=0.1, color = "purple")+ # Waste 12C 55 [73.9; 45.5], 2H 293 [312; 293]
geom_rect(aes(xmin=-60,xmax=-9,ymin=-175,ymax=-81),alpha=0.1, color = "blue")+ # Other anthropogenic sources 12C 35.0 [60; 9], 2H 175 [175; 81]
geom_rect(aes(xmin=-88.9,xmax=-51.5,ymin=-358,ymax=-246),alpha=0.1, color = "black")+ # Natural wetlands 12C 69 [88.9; 51.5], 2H 330 [358; 246]
geom_rect(aes(xmin=-90,xmax=-50,ymin=-450,ymax=-250),alpha=0.1, fill="yellow")+ # MC: Microbial CO2 reduction
geom_rect(aes(xmin=-60,xmax=-90,ymin=-350,ymax=-125),alpha=0.5, fill="pink")+ # MF: Microbial Fermentation
geom_polygon(data = TH, aes(x, y), alpha=0.1,fill="#6B8E23")+ #TH: Thermogenic
geom_polygon(data = A, aes(x, y), alpha=0.4, fill="lightblue")+ # A: Abiotic
labs(x = expression(delta^13*'C in ‰'), y = expression(delta*'D in ‰'), title = "Dual isotope plots of the isotopic source signatures")+
# scale_color_gradient2(midpoint=180, low="blue", mid="red",
# high="blue", space ="Lab" )+
theme(legend.position = "none")
# fill only
p1 <- ggplot() +
geom_point(data=mean_Results, aes(x = c13C, y = c2H, color = "CF-IRMS MWK"))+
geom_errorbar(data=mean_Results, aes(x = c13C, xmin=c13C - c13C_sd, xmax= c13C - c13C_sd, y = c2H, ymin=c2H - c2H_sd, ymax=c2H + c2H_sd, colour="CF-IRMS MWK")) + #, position=pd
geom_errorbarh(data=mean_Results, aes(y = c2H, xmin=c13C - c13C_sd, xmax= c13C + c13C_sd, colour="CF-IRMS MWK"))+
geom_point(data=mean_Results, aes(x = c13C_EMPA, y = c2H_EMPA, color = "FLEXPART-COSMO MWK"))+
geom_errorbar(data=mean_Results, aes(x = c13C_EMPA, ymin=c2H_EMPA-c2H_sd_EMPA, ymax=c2H_EMPA+c2H_sd_EMPA, colour="FLEXPART-COSMO MWK")) + #, position=pd
geom_errorbarh(data=mean_Results, aes(y = c2H_EMPA, xmin=c13C_EMPA - c13C_sd_EMPA, xmax= c13C_EMPA + c13C_sd_EMPA, colour="CF-IRMS MWK"))+
geom_point(data=mean_Results, aes(x = c13C_Total, y = c2H_Total, color = "CF-IRMS MWK"))+
geom_errorbar(data=mean_Results, aes(x = c13C_Total,  ymin=c2H_Total - c2H_sd_Total, ymax=c2H_Total + c2H_sd_Total, colour="CF-IRMS Total")) + #, position=pd
geom_errorbarh(data=mean_Results, aes(y = c2H_Total, xmin=c13C_Total - c13C_sd_Total, xmax= c13C_Total + c13C_sd_Total, colour="CF-IRMS Total"))+
geom_point(data=mean_Results, aes(x = c13C_EMPA_Total, y = c2H_EMPA_Total, color = "FLEXPART-COSMO Total"))+
geom_errorbar(data=mean_Results, aes(x = c13C_EMPA_Total, ymin=c2H_EMPA_Total - c2H_sd_EMPA_Total, ymax=c2H_EMPA_Total + c2H_sd_EMPA_Total, colour="FLEXPART-COSMO Total")) + #, position=pd
geom_errorbarh(data=mean_Results, aes(y = c2H_EMPA_Total, xmin=c13C_EMPA_Total - c13C_sd_EMPA_Total, xmax= c13C_EMPA_Total + c13C_sd_EMPA_Total, colour="FLEXPART-COSMO Total"))+
# scale_color_gradient2(name = "Wind Direction, °", midpoint=180, low="blue", mid="red",
#                       high="blue", space ="Lab" )+
scale_color_manual(name = "Keeling", values = c("CF-IRMS MWK" = "red", "FLEXPART-COSMO MWK" = "blue", "CF-IRMS Total" = "green", "FLEXPART-COSMO Total" = "purple"))+
theme(legend.direction = "vertical", legend.box = "vertical")
# color only
p2 <- ggplot() +
geom_rect(aes(xmin=-66.4,xmax=-30.9,ymin=-199,ymax=-175, color = "Fossil fuels & nonindustrial combustion"), alpha=0.1) + #fossil fuels & nonindustrial combustion 12C 40.0 [66.4; 30.9], 2H 175 [199; 175]
geom_rect(aes(xmin=-70.6,xmax=-46.0,ymin=-361,ymax=-295, color = "Agriculture"),alpha=0.1) + # Agriculture 12C 68.0 [70.6; 46.0], 2H 319 [361; 295]
geom_rect(aes(xmin=-73.9,xmax=-45.5,ymin=-312,ymax=-293, color = "Waste"),alpha=0.1)+ # Waste 12C 55 [73.9; 45.5], 2H 293 [312; 293]
geom_rect(aes(xmin=-60,xmax=-9,ymin=-175,ymax=-81, color = "Other anthropogenic sources"),alpha=0.1)+ # Other anthropogenic sources 12C 35.0 [60; 9], 2H 175 [175; 81]
geom_rect(aes(xmin=-88.9,xmax=-51.5,ymin=-358,ymax=-246, color = "Natural wetlands"), alpha=0.1) +# Natural wetlands 12C 69 [88.9; 51.5], 2H 330 [358; 246]
scale_color_manual('Type',
breaks=c("Fossil fuels & nonindustrial combustion", "Agriculture", "Waste", "Other anthropogenic sources","Natural wetlands"),
values = c("Fossil fuels & nonindustrial combustion" = "red", "Agriculture" = "green", "Waste" = "purple", "Other anthropogenic sources" = "blue", "Natural wetlands" = "black"),
guide = guide_legend(override.aes = list(alpha = 1)))
# theme(legend.direction = "vertical", legend.box = "vertical")
p3 <- ggplot() +
geom_rect(aes(xmin=-90,xmax=-50,ymin=-450,ymax=-250, fill="Microbial CO2 reduction"),alpha=0.1)+ # MC: Microbial CO2 reduction
geom_rect(aes(xmin=-60,xmax=-90,ymin=-350,ymax=-125, fill="Microbial Fermentation"),alpha=0.5)+ # MF: Microbial Fermentation
geom_polygon(data = TH, aes(x, y, fill="Thermogenic"), alpha=0.1)+ #TH: Thermogenic
geom_polygon(data = A, aes(x, y, fill="Abiotic"), alpha=0.4)+ # A: Abiotic
scale_fill_manual('Methode',
breaks=c("Microbial CO2 reduction", "Microbial Fermentation", "Thermogenic", "Abiotic"),
values = c("Microbial CO2 reduction" = 'yellow', "Microbial Fermentation" = "pink", "Thermogenic" = "#6B8E23", "Abiotic" = "lightblue"),
guide = guide_legend(override.aes = list(alpha = 1)))
leg1 <- get_legend(p1)
leg2 <- get_legend(p2)
leg3 <- get_legend(p3)
# create a blank plot for legend alignment
blank_p <- plot_spacer() + theme_void()
# combine all legends
leg123 <- plot_grid(leg1, leg2, leg3,
align = "hv",
# axis = "tb",
nrow = 3
)
Total_Plot <- plot_grid(p0,
leg123,
nrow = 1,
align = "h",
axis = "t",
rel_widths = c(1, 0.3)
)
# Save and export the plot
ggsave("24_Dual_Isotopes_Total_MWK.png", Total_Plot, path = "4_Data/OutputData/Plots/24_EMPA", width = 12, height = 5.2)
# Plotting the results in a combine isotope plot to identify emmittor type.
# regions are highlightet for the emmition type
## Create Ploygon to be used in the Plots
# Thermogenic
TH <- data.frame(x = c(-75, -40, -15, -40, -60), y = c(-350, -100, -150, -300, -350))
# Abiotic
A <- data.frame(x = c(-50, -50, -25, -10, -10), y = c(-450, -300, -50, -50, -450))
p0 <- ggplot() +
geom_point(data=mean_Results, aes(x = c13C, y = c2H, color = "CF-IRMS MWK"), color = "red")+
geom_errorbar(data=mean_Results, aes(x = c13C, xmin=c13C - c13C_sd, xmax= c13C - c13C_sd, y = c2H, ymin=c2H - c2H_sd, ymax=c2H + c2H_sd, colour="CF-IRMS MWK"), width=.02, alpha=0.5, color = "red") + #, position=pd
geom_errorbarh(data=mean_Results, aes(y = c2H, xmin=c13C - c13C_sd, xmax= c13C + c13C_sd, colour="CF-IRMS MWK"), width=.02, alpha=0.5, color = "red")+
geom_point(data=mean_Results, aes(x = c13C_EMPA, y = c2H_EMPA, color = "FLEXPART-COSMO MWK"), color = "blue")+
geom_errorbar(data=mean_Results, aes(x = c13C_EMPA, ymin=c2H_EMPA-c2H_sd_EMPA, ymax=c2H_EMPA+c2H_sd_EMPA, colour="FLEXPART-COSMO MWK"), width=.02, alpha=0.5, color = "blue") + #, position=pd
geom_errorbarh(data=mean_Results, aes(y = c2H_EMPA, xmin=c13C_EMPA - c13C_sd_EMPA, xmax= c13C_EMPA + c13C_sd_EMPA, colour="CF-IRMS MWK"), width=.02, alpha=0.5, color = "blue")+
geom_point(data=mean_Results, aes(x = c13C_Total, y = c2H_Total, color = "CF-IRMS MWK"), color = "green")+
geom_errorbar(data=mean_Results, aes(x = c13C_Total,  ymin=c2H_Total - c2H_sd_Total, ymax=c2H_Total + c2H_sd_Total, colour="CF-IRMS Total"), width=.02, alpha=0.5, color = "green") + #, position=pd
geom_errorbarh(data=mean_Results, aes(y = c2H_Total, xmin=c13C_Total - c13C_sd_Total, xmax= c13C_Total + c13C_sd_Total, colour="CF-IRMS Total"), width=.02, alpha=0.5, color = "green")+
geom_point(data=mean_Results, aes(x = c13C_EMPA_Total, y = c2H_EMPA_Total, color = "FLEXPART-COSMO Total"), color = "purple")+
geom_errorbar(data=mean_Results, aes(x = c13C_EMPA_Total, ymin=c2H_EMPA_Total - c2H_sd_EMPA_Total, ymax=c2H_EMPA_Total + c2H_sd_EMPA_Total, colour="FLEXPART-COSMO Total"), width=.02, alpha=0.5, color = "purple") + #, position=pd
geom_errorbarh(data=mean_Results, aes(y = c2H_EMPA_Total, xmin=c13C_EMPA_Total - c13C_sd_EMPA_Total, xmax= c13C_EMPA_Total + c13C_sd_EMPA_Total, colour="FLEXPART-COSMO Total"), width=.02, alpha=0.5, color = "purple")+
geom_rect(aes(xmin=-66.4,xmax=-30.9,ymin=-199,ymax=-175), alpha=0.1, color = "red")+ #fossil fuels & nonindustrial combustion 12C 40.0 [66.4; 30.9], 2H 175 [199; 175]
geom_rect(aes(xmin=-70.6,xmax=-46.0,ymin=-361,ymax=-295),alpha=0.1, color = "green")+ # Agriculture 12C 68.0 [70.6; 46.0], 2H 319 [361; 295]
geom_rect(aes(xmin=-73.9,xmax=-45.5,ymin=-312,ymax=-293),alpha=0.1, color = "purple")+ # Waste 12C 55 [73.9; 45.5], 2H 293 [312; 293]
geom_rect(aes(xmin=-60,xmax=-9,ymin=-175,ymax=-81),alpha=0.1, color = "blue")+ # Other anthropogenic sources 12C 35.0 [60; 9], 2H 175 [175; 81]
geom_rect(aes(xmin=-88.9,xmax=-51.5,ymin=-358,ymax=-246),alpha=0.1, color = "black")+ # Natural wetlands 12C 69 [88.9; 51.5], 2H 330 [358; 246]
geom_rect(aes(xmin=-90,xmax=-50,ymin=-450,ymax=-250),alpha=0.1, fill="yellow")+ # MC: Microbial CO2 reduction
geom_rect(aes(xmin=-60,xmax=-90,ymin=-350,ymax=-125),alpha=0.5, fill="pink")+ # MF: Microbial Fermentation
geom_polygon(data = TH, aes(x, y), alpha=0.1,fill="#6B8E23")+ #TH: Thermogenic
geom_polygon(data = A, aes(x, y), alpha=0.4, fill="lightblue")+ # A: Abiotic
labs(x = expression(delta^13*'C in ‰'), y = expression(delta*'D in ‰'), title = "Dual isotope plots of the isotopic source signatures")+
# scale_color_gradient2(midpoint=180, low="blue", mid="red",
# high="blue", space ="Lab" )+
theme(legend.position = "none")
# fill only
p1 <- ggplot() +
geom_point(data=mean_Results, aes(x = c13C, y = c2H, color = "CF-IRMS MWK"))+
geom_errorbar(data=mean_Results, aes(x = c13C, xmin=c13C - c13C_sd, xmax= c13C - c13C_sd, y = c2H, ymin=c2H - c2H_sd, ymax=c2H + c2H_sd, colour="CF-IRMS MWK")) + #, position=pd
geom_errorbarh(data=mean_Results, aes(y = c2H, xmin=c13C - c13C_sd, xmax= c13C + c13C_sd, colour="CF-IRMS MWK"))+
geom_point(data=mean_Results, aes(x = c13C_EMPA, y = c2H_EMPA, color = "FLEXPART-COSMO MWK"))+
geom_errorbar(data=mean_Results, aes(x = c13C_EMPA, ymin=c2H_EMPA-c2H_sd_EMPA, ymax=c2H_EMPA+c2H_sd_EMPA, colour="FLEXPART-COSMO MWK")) + #, position=pd
geom_errorbarh(data=mean_Results, aes(y = c2H_EMPA, xmin=c13C_EMPA - c13C_sd_EMPA, xmax= c13C_EMPA + c13C_sd_EMPA, colour="CF-IRMS MWK"))+
geom_point(data=mean_Results, aes(x = c13C_Total, y = c2H_Total, color = "CF-IRMS MWK"))+
geom_errorbar(data=mean_Results, aes(x = c13C_Total,  ymin=c2H_Total - c2H_sd_Total, ymax=c2H_Total + c2H_sd_Total, colour="CF-IRMS Total")) + #, position=pd
geom_errorbarh(data=mean_Results, aes(y = c2H_Total, xmin=c13C_Total - c13C_sd_Total, xmax= c13C_Total + c13C_sd_Total, colour="CF-IRMS Total"))+
geom_point(data=mean_Results, aes(x = c13C_EMPA_Total, y = c2H_EMPA_Total, color = "FLEXPART-COSMO Total"))+
geom_errorbar(data=mean_Results, aes(x = c13C_EMPA_Total, ymin=c2H_EMPA_Total - c2H_sd_EMPA_Total, ymax=c2H_EMPA_Total + c2H_sd_EMPA_Total, colour="FLEXPART-COSMO Total")) + #, position=pd
geom_errorbarh(data=mean_Results, aes(y = c2H_EMPA_Total, xmin=c13C_EMPA_Total - c13C_sd_EMPA_Total, xmax= c13C_EMPA_Total + c13C_sd_EMPA_Total, colour="FLEXPART-COSMO Total"))+
# scale_color_gradient2(name = "Wind Direction, °", midpoint=180, low="blue", mid="red",
#                       high="blue", space ="Lab" )+
scale_color_manual(name = "Keeling", values = c("CF-IRMS MWK" = "red", "FLEXPART-COSMO MWK" = "blue", "CF-IRMS Total" = "green", "FLEXPART-COSMO Total" = "purple"))+
theme(legend.direction = "vertical", legend.box = "vertical")
# color only
p2 <- ggplot() +
geom_rect(aes(xmin=-66.4,xmax=-30.9,ymin=-199,ymax=-175, color = "Fossil fuels & nonindustrial combustion"), alpha=0.1) + #fossil fuels & nonindustrial combustion 12C 40.0 [66.4; 30.9], 2H 175 [199; 175]
geom_rect(aes(xmin=-70.6,xmax=-46.0,ymin=-361,ymax=-295, color = "Agriculture"),alpha=0.1) + # Agriculture 12C 68.0 [70.6; 46.0], 2H 319 [361; 295]
geom_rect(aes(xmin=-73.9,xmax=-45.5,ymin=-312,ymax=-293, color = "Waste"),alpha=0.1)+ # Waste 12C 55 [73.9; 45.5], 2H 293 [312; 293]
geom_rect(aes(xmin=-60,xmax=-9,ymin=-175,ymax=-81, color = "Other anthropogenic sources"),alpha=0.1)+ # Other anthropogenic sources 12C 35.0 [60; 9], 2H 175 [175; 81]
geom_rect(aes(xmin=-88.9,xmax=-51.5,ymin=-358,ymax=-246, color = "Natural wetlands"), alpha=0.1) +# Natural wetlands 12C 69 [88.9; 51.5], 2H 330 [358; 246]
scale_color_manual('Type',
breaks=c("Fossil fuels & nonindustrial combustion", "Agriculture", "Waste", "Other anthropogenic sources","Natural wetlands"),
values = c("Fossil fuels & nonindustrial combustion" = "red", "Agriculture" = "green", "Waste" = "purple", "Other anthropogenic sources" = "blue", "Natural wetlands" = "black"),
guide = guide_legend(override.aes = list(alpha = 1)))
# theme(legend.direction = "vertical", legend.box = "vertical")
p3 <- ggplot() +
geom_rect(aes(xmin=-90,xmax=-50,ymin=-450,ymax=-250, fill="Microbial CO2 reduction"),alpha=0.1)+ # MC: Microbial CO2 reduction
geom_rect(aes(xmin=-60,xmax=-90,ymin=-350,ymax=-125, fill="Microbial Fermentation"),alpha=0.5)+ # MF: Microbial Fermentation
geom_polygon(data = TH, aes(x, y, fill="Thermogenic"), alpha=0.1)+ #TH: Thermogenic
geom_polygon(data = A, aes(x, y, fill="Abiotic"), alpha=0.4)+ # A: Abiotic
scale_fill_manual('Methode',
breaks=c("Microbial CO2 reduction", "Microbial Fermentation", "Thermogenic", "Abiotic"),
values = c("Microbial CO2 reduction" = 'yellow', "Microbial Fermentation" = "pink", "Thermogenic" = "#6B8E23", "Abiotic" = "lightblue"),
guide = guide_legend(override.aes = list(alpha = 1)))
leg1 <- get_legend(p1)
leg2 <- get_legend(p2)
leg3 <- get_legend(p3)
# create a blank plot for legend alignment
blank_p <- plot_spacer() + theme_void()
# combine all legends
leg123 <- plot_grid(leg1, leg2, leg3,
align = "hv",
# axis = "tb",
nrow = 3
)
Total_Plot <- plot_grid(p0,
leg123,
nrow = 1,
align = "h",
axis = "t",
rel_widths = c(1, 0.3)
)
# Save and export the plot
ggsave("24_Dual_Isotopes_Total_MWK.png", Total_Plot, path = "4_Data/OutputData/Plots/24_EMPA", width = 12, height = 5.2)
View(mean_Results)
source("~/Documents/Uni/MasterThesis/4_Scrips_and_Data/3_Scripts/Keeling_EMPA.R", echo=TRUE)
source("~/Documents/Uni/MasterThesis/4_Scrips_and_Data/3_Scripts/Keeling_EMPA.R", echo=TRUE)
source("~/Documents/Uni/MasterThesis/4_Scrips_and_Data/3_Scripts/Keeling_EMPA.R", echo=TRUE)
source("~/Documents/Uni/MasterThesis/4_Scrips_and_Data/3_Scripts/Keeling_EMPA.R", echo=TRUE)
Keeling_Peaks_EMPA
Keeling_Peaks_Measurment
Keeling_Large_Peaks_Measurment
source("~/Documents/Uni/MasterThesis/4_Scrips_and_Data/3_Scripts/Yamamoto_average_wind.R", echo=TRUE)
library(ggplot2)
library(hexbin)
library(gridExtra)
library(dplyr)
library(plotly)
library(rio)
library(gridExtra)
library(grid)
library(pracma)
library(patchwork)
# library(ggplot2)
# library(hexbin)
# library(dplyr)
# library(lubridate)
library(plotly)
library(rio)
library(cowplot)
# Set Working Directory
setwd("/Users/juanbettinelli/Documents/Uni/MasterThesis/4_Scrips_and_Data")
# Set Starting and Finish Time
StartTime <- as.POSIXct('2021-08-01 22:03:00',
format = "%Y-%m-%d %H:%M:%S",
tz ="utc")
# Start Time: 2021-08-01 22:03:00
FinishTime <- as.POSIXct('2022-03-29 00:00:00',
format = "%Y-%m-%d %H:%M:%S",
tz ="utc")
# Total Timeseries: 2022-03-29 00:00:00
# Hamburg Campagne Timeseries: 2021-09-06 00:00:00
# Hamburg Campaine #2: 2021-09-17 10:21:00
#----------------------------------------------------------------
# Function to calculate the Yamamoto average wind direction
yamamoto_average <- function(directions_degrees) {
radians <- directions_degrees * (pi / 180)
sin_sum <- sum(sin(radians))
cos_sum <- sum(cos(radians))
average_rad <- atan2(sin_sum, cos_sum)
average_deg <- average_rad * (180 / pi)
if (average_deg < 0) {
average_deg <- 360 + average_deg
}
return(average_deg)
}
#----------------------------------------------------------------
########### Read the CSV File #############
# Read the CSV File
TotalData <- import("4_Data/OutputData/CombineMeteorologicalData.csv")
# format the Date 'UTC'
TotalData$UTC <- as.POSIXct(as.character(TotalData$UTC),
format = "%Y-%m-%d %H:%M:%S",
tz = "UTC")
# Convert the format of 'X.CH4.' to numeric
TotalData$X.CH4. <- as.numeric(TotalData$X.CH4.)
# Filter out all the dated that are outside the selected Strating and Finish time of the campaign
TotalData <- filter(TotalData, TotalData$UTC > StartTime & TotalData$UTC < FinishTime, .preserve = FALSE)
# Remove Empty Cells n data frame
TotalData <- TotalData[!is.na(TotalData$UTC),]
# Calculate 1/Mole Fraction for C13 & H2
TotalData$c13C <- 1/TotalData$X.CH4..13C
TotalData$c2H <- 1/TotalData$X.CH4..2H
# Calculate the Yamamoto average wind direction
average_direction <- yamamoto_average(TotalData$Direction)
View(TotalData)
TotalData_1 <- TotalData[complete.cases(TotalData[ , "Direction"]),c("UTC", "Direction", "Speed")]
# Calculate the Yamamoto average wind direction
average_direction <- yamamoto_average(TotalData$Direction)
wind_directions <- c(30, 45, 60, 80, 100, 120, 240, 270, 290, 310)
# Calculate the Yamamoto average wind direction
average_direction <- yamamoto_average(TotalData$Direction)
# Calculate the Yamamoto average wind direction
average_direction <- yamamoto_average(wind_directions)
TotalData$Direction
TotalData_1 <- TotalData[complete.cases(TotalData[ , "Direction"]),c("UTC", "Direction", "Speed")]
# Calculate the Yamamoto average wind direction
average_direction <- yamamoto_average(TotalData_1$Direction)
# Print the result
cat("Yamamoto Average Wind Direction:", round(average_direction, 2), "degrees\n")
View(TotalData)
Geomatikum <- TotalData[complete.cases(TotalData[ , "Direction"]),c("UTC", "Direction", "Speed")]
# Calculate the Yamamoto average wind direction
Geomatikum_average$Direction <- yamamoto_average(Geomatikum$Direction)
# Calculate the Yamamoto average wind direction
Geomatikum_average[1] <- yamamoto_average(Geomatikum$Direction)
# Calculate the Yamamoto average wind direction
Geomatikum_average <- data_frame()
Geomatikum_average[1] <- yamamoto_average(Geomatikum$Direction)
Geomatikum_average[2] <- mean(Geomatikum$Speed)
Geomatikum_average
Geomatikum_average[1]
Geomatikum <- TotalData[complete.cases(TotalData[ , "Direction"]),c("UTC", "Direction", "Speed")]
# Calculate the Yamamoto average wind direction
Geomatikum_average <- data_frame()
Geomatikum_average[1, "Direction"] <- yamamoto_average(Geomatikum$Direction)
Geomatikum_average[1, "Speed"] <- mean(Geomatikum$Speed)
Geomatikum_average
Mast_50 <- TotalData[complete.cases(TotalData[ , "Direction50m"]),c("UTC", "Direction50m", "Speed50m")]
# Calculate the Yamamoto average wind direction
Geomatikum_average <- data_frame()
Geomatikum_average[1, "Direction"] <- yamamoto_average(Mast_50$Direction50m)
Geomatikum <- TotalData[complete.cases(TotalData[ , "Direction"]),c("UTC", "Direction", "Speed")]
# Calculate the Yamamoto average wind direction
Geomatikum_average <- data_frame()
Geomatikum_average[1, "Direction"] <- yamamoto_average(Geomatikum$Direction)
Geomatikum_average[1, "Speed"] <- mean(Geomatikum$Speed)
Mast_50 <- TotalData[complete.cases(TotalData[ , "Direction50m"]),c("UTC", "Direction50m", "Speed50m")]
# Calculate the Yamamoto average wind direction
Mast_50_average <- data_frame()
Mast_50_average[1, "Direction"] <- yamamoto_average(Mast_50$Direction50m)
Mast_50_average[1, "Speed"] <- mean(Mast_50$Speed50m)
Mast_110 <- TotalData[complete.cases(TotalData[ , "Direction110m"]),c("UTC", "Direction110m", "Speed110m")]
# Calculate the Yamamoto average wind direction
Mast_110_average <- data_frame()
Mast_110_average[1, "Direction"] <- yamamoto_average(Mast_50$Direction110m)
Mast_110_average[1, "Speed"] <- mean(Mast_50$Speed110m)
Mast_110 <- TotalData[complete.cases(TotalData[ , "Direction110m"]),c("UTC", "Direction110m", "Speed110m")]
# Calculate the Yamamoto average wind direction
Mast_110_average <- data_frame()
Mast_110_average[1, "Direction"] <- yamamoto_average(Mast_110$Direction110m)
Mast_110_average[1, "Speed"] <- mean(Mast_110$Speed110m)
source("~/Documents/Uni/MasterThesis/4_Scrips_and_Data/3_Scripts/Yamamoto_average_wind.R", echo=TRUE)
DWD_average
cat("Geomatikum Yamamoto Average Wind Direction:", round(Geomatikum_average, 2), "degrees\n")
cat("Geomatikum Yamamoto Average Wind Direction:", round(Geomatikum_average$Direction, 2), "degrees\n", "and ", , round(Geomatikum_average$Direction, 2), "m/s")
cat("Geomatikum Yamamoto Average Wind Direction:", round(Geomatikum_average$Direction, 2), "degrees\n", "and ", , round(Geomatikum_average$Speed, 2), "m/s")
cat("Geomatikum Yamamoto Average Wind Direction:", Geomatikum_average$Direction, "degrees\n", "and ", Geomatikum_average$Speed, "m/s")
cat("Geomatikum Yamamoto Average Wind Direction:", Geomatikum_average$Direction, "degrees\n", "and Wind Speed", Geomatikum_average$Speed, "m/s")
cat("Geomatikum Yamamoto Average Wind Direction:", Geomatikum_average$Direction, "degrees\n", "and Wind Speed", Geomatikum_average$Speed, "m/s")
cat("Geomatikum Yamamoto Average Wind Direction:", Mast_50_average$Direction, "degrees\n", "and Wind Speed", Mast_50_average$Speed, "m/s")
cat("Geomatikum Yamamoto Average Wind Direction:", Mast_110_average$Direction, "degrees\n", "and Wind Speed", Mast_110_average$Speed, "m/s")
cat("Geomatikum Yamamoto Average Wind Direction:", DWD_average$Direction, "degrees\n", "and Wind Speed", DWD_average$Speed, "m/s")
cat("Geomatikum Yamamoto Average Wind Direction:", Geomatikum_average$Direction, "degrees\n", "and Wind Speed", Geomatikum_average$Speed, "m/s\n",
"Geomatikum Yamamoto Average Wind Direction:", Mast_50_average$Direction, "degrees\n", "and Wind Speed", Mast_50_average$Speed, "m/s\n",
"Geomatikum Yamamoto Average Wind Direction:", Mast_110_average$Direction, "degrees\n", "and Wind Speed", Mast_110_average$Speed, "m/s\n",
"Geomatikum Yamamoto Average Wind Direction:", DWD_average$Direction, "degrees\n", "and Wind Speed", DWD_average$Speed, "m/s\n")
library(pacman)
library(lubridate)
library(readr)
library(plyr)
library(tidyverse)
library(ggplot2)
library(hexbin)
library(gridExtra)
library(reshape2)
library(openair)
library(cowplot)
library(patchwork)
library(dplyr)
library(GGally)
library(ggthemes)
library(ggvis)
library(httr)
library(plotly)
library(rio)
library(rmarkdown)
library(shiny)
library(stringr)
library(tidyr)
library(pracma)
#Set Working Directory, Set it into the folder "MasterThesis/4_Scrips_and_Data" to automatically access the data.
setwd("/Users/juanbettinelli/Documents/Uni/MasterThesis/4_Scrips_and_Data")
source("3_Scripts/Functions.R")
source("3_Scripts/CH4_Transportmodel.R")
StartTime <- as.POSIXct('2021-08-01 22:03:00',
format = "%Y-%m-%d %H:%M:%S",
tz ="utc")
# Start Time: 2021-08-01 22:03:00
FinishTime <- as.POSIXct('2022-03-29 00:00:00',
format = "%Y-%m-%d %H:%M:%S",
tz ="utc")
# Total Timeseries: 2022-03-29 00:00:00
# Hamburg Campagne Timeseries: 2021-09-06 00:00:00
# Hamburg Campaine #2: 2021-09-17 10:21:00
########### Read the CSV File #############
TotalData <- import("4_Data/OutputData/CombineMeteorologicalData.csv")
TotalData$UTC <- as.POSIXct(as.character(TotalData$UTC),
format = "%Y-%m-%d %H:%M:%S",
tz = "UTC")
TotalData$X.CH4. <- as.numeric(TotalData$X.CH4.)
TotalData$UTC <- as.POSIXct(TotalData$UTC,
format = "%d-%m-%Y %H:%M:%S",
tz = "utc")
TotalData <- filter(TotalData, TotalData$UTC > StartTime & TotalData$UTC < FinishTime, .preserve = FALSE)
TotalData$Direction[TotalData$Direction > 361] <- NA
TotalData$Speed[TotalData$Speed > 99] <- NA
######### Wind Rose Plots (Plot 9) ##########
WindRose_Plots(TotalData)
Geomatikum <- TotalData[complete.cases(TotalData[ , "Direction"]),c("UTC", "Direction", "Speed")]
# Calculate the Yamamoto average wind direction
Geomatikum_average <- data_frame()
Geomatikum_average[1, "Direction"] <- yamamoto_average(Geomatikum$Direction)
# Calculate circular standard deviation
Geomatikum_average[1, "Direction_csd"] <- sqrt(-2 * log(1 - circular_variance(Geomatikum$Direction)))
source("~/Documents/Uni/MasterThesis/4_Scrips_and_Data/3_Scripts/Yamamoto_average_wind.R", echo=TRUE)
Geomatikum_average
cat("Geomatikum Yamamoto Average Wind Direction:", Geomatikum_average$Direction, "±", Geomatikum_average$Direction_csd , "degrees\n", "and Wind Speed", Geomatikum_average$Speed, "±" , Geomatikum_average$Speed_sd , "m/s\n",
"Geomatikum Yamamoto Average Wind Direction:", Mast_50_average$Direction, "degrees\n", "and Wind Speed", Mast_50_average$Speed, "m/s\n",
"Geomatikum Yamamoto Average Wind Direction:", Mast_110_average$Direction, "degrees\n", "and Wind Speed", Mast_110_average$Speed, "m/s\n",
"Geomatikum Yamamoto Average Wind Direction:", DWD_average$Direction, "degrees\n", "and Wind Speed", DWD_average$Speed, "m/s\n")
source("~/Documents/Uni/MasterThesis/4_Scrips_and_Data/3_Scripts/Yamamoto_average_wind.R", echo=TRUE)
source("~/Documents/Uni/MasterThesis/4_Scrips_and_Data/3_Scripts/Yamamoto_average_wind.R", echo=TRUE)
cat("Geomatikum Yamamoto Average Wind Direction:", Geomatikum_average$Direction, "±", Geomatikum_average$Direction_csd , "degrees\n", "and Wind Speed", Geomatikum_average$Speed, "±" , Geomatikum_average$Speed_sd , "m/s\n",
"Geomatikum Yamamoto Average Wind Direction:", Mast_50_average$Direction, "±", Mast_50_average$Direction_csd ,"degrees\n", "and Wind Speed", Mast_50_average$Speed, "±" , Mast_50_average$Speed_sd , "m/s\n",
"Geomatikum Yamamoto Average Wind Direction:", Mast_110_average$Direction, "±", Mast_110_average$Direction_csd , "degrees\n", "and Wind Speed", Mast_110_average$Speed, "±" , Mast_110_average$Speed_sd , "m/s\n",
"Geomatikum Yamamoto Average Wind Direction:", DWD_average$Direction, "±", DWD_average$Direction_csd , "degrees\n", "and Wind Speed", DWD_average$Speed, "±" , DWD_average$Speed_sd , "m/s\n")
source("~/Documents/Uni/MasterThesis/4_Scrips_and_Data/3_Scripts/Yamamoto_average_wind.R", echo=TRUE)
Geomatikum <- TotalData[complete.cases(TotalData[ , "Direction"]),c("UTC", "Direction", "Speed")]
# Calculate the Yamamoto average wind direction
Geomatikum_average <- data_frame()
Geomatikum_average[1, "Direction"] <- yamamoto_average(Geomatikum$Direction)
# Calculate circular standard deviation
Geomatikum_average[1, "Direction_csd"] <- sqrt(-2 * log(1 - circular_variance(Geomatikum$Direction)))
Geomatikum_average[1, "Speed"] <- mean(Geomatikum$Speed)
Geomatikum_average[1, "Speed_sd"] <- sd(Geomatikum$Speed)
Mast_50 <- TotalData[complete.cases(TotalData[ , "Direction50m"]),c("UTC", "Direction50m", "Speed50m")]
# Calculate the Yamamoto average wind direction
Mast_50_average <- data_frame()
Mast_50_average[1, "Direction"] <- yamamoto_average(Mast_50$Direction50m)
# Calculate circular standard deviation
Mast_50_average[1, "Direction_csd"] <- sqrt(-2 * log(1 - circular_variance(Mast_50$Direction50m)))
Mast_50_average[1, "Speed"] <- mean(Mast_50$Speed50m)
Mast_50_average[1, "Speed_sd"] <- sd(Mast_50$Speed50m)
Mast_110 <- TotalData[complete.cases(TotalData[ , "Direction110m"]),c("UTC", "Direction110m", "Speed110m")]
# Calculate the Yamamoto average wind direction
Mast_110_average <- data_frame()
Mast_110_average[1, "Direction"] <- yamamoto_average(Mast_110$Direction110m)
# Calculate circular standard deviation
Mast_110_average[1, "Direction_csd"] <- sqrt(-2 * log(1 - circular_variance(Mast_110$Direction110m)))
Mast_110_average[1, "Speed"] <- mean(Mast_110$Speed110m)
Mast_110_average[1, "Speed_sd"] <- sd(Mast_110$Speed110m)
DWD <- TotalData[complete.cases(TotalData[ , "Wind_Direction"]),c("UTC", "Wind_Direction", "Wind_Speed")]
# Calculate the Yamamoto average wind direction
DWD_average <- data_frame()
DWD_average[1, "Direction"] <- yamamoto_average(DWD$Wind_Direction)
# Calculate circular standard deviation
DWD_average[1, "Direction_csd"] <- sqrt(-2 * log(1 - circular_variance(DWD$Wind_Direction)))
DWD_average[1, "Speed"] <- mean(DWD$Wind_Speed)
DWD_average[1, "Speed_sd"] <- sd(DWD$Wind_Speed)
cat("Geomatikum Yamamoto Average Wind Direction:", Geomatikum_average$Direction, "±", Geomatikum_average$Direction_csd , "degrees\n", "and Wind Speed", Geomatikum_average$Speed, "±" , Geomatikum_average$Speed_sd , "m/s\n",
"Geomatikum Yamamoto Average Wind Direction:", Mast_50_average$Direction, "±", Mast_50_average$Direction_csd ,"degrees\n", "and Wind Speed", Mast_50_average$Speed, "±" , Mast_50_average$Speed_sd , "m/s\n",
"Geomatikum Yamamoto Average Wind Direction:", Mast_110_average$Direction, "±", Mast_110_average$Direction_csd , "degrees\n", "and Wind Speed", Mast_110_average$Speed, "±" , Mast_110_average$Speed_sd , "m/s\n",
"Geomatikum Yamamoto Average Wind Direction:", DWD_average$Direction, "±", DWD_average$Direction_csd , "degrees\n", "and Wind Speed", DWD_average$Speed, "±" , DWD_average$Speed_sd , "m/s\n")
View(Mast_110)
source("~/Documents/Uni/MasterThesis/4_Scrips_and_Data/3_Scripts/Yamamoto_average_wind.R", echo=TRUE)
source("~/Documents/Uni/MasterThesis/4_Scrips_and_Data/3_Scripts/Yamamoto_average_wind.R", echo=TRUE)
View(Geomatikum)
source("~/Documents/Uni/MasterThesis/4_Scrips_and_Data/3_Scripts/Yamamoto_average_wind.R", echo=TRUE)
source("~/Documents/Uni/MasterThesis/4_Scrips_and_Data/3_Scripts/Yamamoto_average_wind.R", echo=TRUE)
Small_Peaks <- Total_Peaks[complete.cases(Total_Peaks[ , "Direction"]),c("UTC", "Direction", "Speed")]
# Calculate the Yamamoto average wind direction
Small_Peaks_average <- data_frame()
Small_Peaksm_average[1, "Direction"] <- yamamoto_average(Small_Peaks$Direction)
View(Total_Peaks)
# Calculate the Yamamoto average wind direction
Small_Peaks_average <- data_frame()
Small_Peaksm_average[1, "Direction"] <- yamamoto_average(Small_Peaks$Direction)
View(Small_Peaks)
Small_Peaks <- Total_Peaks[complete.cases(Total_Peaks[ , "Direction"]),c("UTC", "Direction", "Speed")]
# Calculate the Yamamoto average wind direction
Small_Peaks_average <- data_frame()
Small_Peaks_average[1, "Direction"] <- yamamoto_average(Small_Peaks$Direction)
# Calculate circular standard deviation
Small_Peaks_average[1, "Direction_csd"] <- sqrt(-2 * log(1 - circular_variance(Small_Peaks$Direction)))
Small_Peaks_average[1, "Speed"] <- mean(Small_Peaks$Speed)
Small_Peaks_average[1, "Speed_sd"] <- sd(Small_Peaks$Speed)
cat("Geomatikum Yamamoto Average Wind Direction:", Geomatikum_average$Direction, "±", Geomatikum_average$Direction_csd , "degrees\n", "and Wind Speed", Geomatikum_average$Speed, "±" , Geomatikum_average$Speed_sd , "m/s\n",
"Weather mast 50 m Yamamoto Average Wind Direction:", Mast_50_average$Direction, "±", Mast_50_average$Direction_csd ,"degrees\n", "and Wind Speed", Mast_50_average$Speed, "±" , Mast_50_average$Speed_sd , "m/s\n",
"Weather mast 110 m Yamamoto Average Wind Direction:", Mast_110_average$Direction, "±", Mast_110_average$Direction_csd , "degrees\n", "and Wind Speed", Mast_110_average$Speed, "±" , Mast_110_average$Speed_sd , "m/s\n",
"DWD Yamamoto Average Wind Direction:", DWD_average$Direction, "±", DWD_average$Direction_csd , "degrees\n", "and Wind Speed", DWD_average$Speed, "±" , DWD_average$Speed_sd , "m/s\n",
"Geomatikum Small Peaks Yamamoto Average Wind Direction:", Small_Peaks_average$Direction, "±", Small_Peaks_average$Direction_csd , "degrees\n", "and Wind Speed", Small_Peaks_average$Speed, "±" , Small_Peaks_average$Speed_sd , "m/s\n",)
cat("Geomatikum Yamamoto Average Wind Direction:", Geomatikum_average$Direction, "±", Geomatikum_average$Direction_csd , "degrees\n", "and Wind Speed", Geomatikum_average$Speed, "±" , Geomatikum_average$Speed_sd , "m/s\n",
"Weather mast 50 m Yamamoto Average Wind Direction:", Mast_50_average$Direction, "±", Mast_50_average$Direction_csd ,"degrees\n", "and Wind Speed", Mast_50_average$Speed, "±" , Mast_50_average$Speed_sd , "m/s\n",
"Weather mast 110 m Yamamoto Average Wind Direction:", Mast_110_average$Direction, "±", Mast_110_average$Direction_csd , "degrees\n", "and Wind Speed", Mast_110_average$Speed, "±" , Mast_110_average$Speed_sd , "m/s\n",
"DWD Yamamoto Average Wind Direction:", DWD_average$Direction, "±", DWD_average$Direction_csd , "degrees\n", "and Wind Speed", DWD_average$Speed, "±" , DWD_average$Speed_sd , "m/s\n",
"Geomatikum Small Peaks Yamamoto Average Wind Direction:", Small_Peaks_average$Direction, "±", Small_Peaks_average$Direction_csd , "degrees\n", "and Wind Speed", Small_Peaks_average$Speed, "±" , Small_Peaks_average$Speed_sd , "m/s\n")
source("~/Documents/Uni/MasterThesis/4_Scrips_and_Data/3_Scripts/Yamamoto_average_wind.R", echo=TRUE)
